{"index_struct": {"text": null, "doc_id": null, "embedding": null, "extra_info": null, "nodes_dict": {"8448457062516059212": {"text": "ImageNet Classi\ufb01cation with Deep Convolutional\nNeural Networks\nAlex Krizhevsky\nUniversity of Toronto\nkriz@cs.utoronto.caIlya Sutskever\nUniversity of Toronto\nilya@cs.utoronto.caGeoffrey E. Hinton\nUniversity of Toronto\nhinton@cs.utoronto.ca\nAbstract\nWe trained a large, deep convolutional neural network to classify the 1.2 million\nhigh-resolution images in the ImageNet LSVRC-2010 contest into the 1000 dif-\nferent classes. On the test data, we achieved top-1 and top-5 error rates of 37.5%\nand 17.0% which is considerably better than the previous state-of-the-art. The\nneural network, which has 60 million parameters and 650,000 neurons, consists\nof \ufb01ve convolutional layers, some of which are followed by max-pooling layers,\nand three fully-connected layers with a \ufb01nal 1000-way softmax. To make train-\ning faster, we used non-saturating neurons and a very ef\ufb01cient GPU implemen-\ntation of the convolution operation. To reduce over\ufb01tting in the fully-connected\nlayers we employed a recently-developed regularization method called \u201cdropout\u201d\nthat proved to be very effective. We also entered a variant of this model in the\nILSVRC-2012 competition and achieved a winning top-5 test error rate of 15.3%,\ncompared to 26.2% achieved by the second-best entry.\n1 Introduction\nCurrent approaches to object recognition make essential use of machine learning methods. To im-\nprove their performance, we can collect larger datasets, learn more powerful models, and use bet-\nter techniques for preventing over\ufb01tting. Until recently, datasets of labeled images were relatively\nsmall \u2014 on the order of tens of thousands of images (e.g., NORB [16], Caltech-101/256 [8, 9], and\nCIFAR-10/100 [12]). Simple recognition tasks can be solved quite well with datasets of this size,\nespecially if they are augmented with label-preserving transformations. For example, the current-\nbest error rate on the MNIST digit-recognition task (<0.3%) approaches human performance [4].\nBut objects in realistic settings exhibit considerable variability, so to learn to recognize them it is\nnecessary to use much larger training sets. And indeed, the shortcomings of small image datasets\nhave been widely recognized (e.g., Pinto et al. [21]), but it has only recently become possible to col-\nlect labeled datasets with millions of images. The new larger datasets include LabelMe [23], which\nconsists of hundreds of thousands of fully-segmented images, and ImageNet [6], which consists of\nover 15 million labeled high-resolution images in over 22,000 categories.\nTo learn about thousands of objects from millions of images, we need a model with a large learning\ncapacity. However, the immense complexity of the object recognition task means that this prob-\nlem cannot be speci\ufb01ed even by a dataset as large as ImageNet, so our model should also have lots\nof prior knowledge to compensate for all the data we don\u2019t have. Convolutional neural networks\n(CNNs) constitute one such class of models [16, 11, 13, 18, 15, 22, 26]. Their capacity can be con-\ntrolled by varying their depth and breadth, and they also make strong and mostly correct assumptions\nabout the nature of images (namely, stationarity of statistics and locality of pixel dependencies).\nThus, compared to standard feedforward neural networks with similarly-sized layers, CNNs have\nmuch fewer connections and parameters and so they are easier to train, while their theoretically-best\nperformance is likely to be only slightly worse.\n1\nDespite the attractive qualities of CNNs, and despite the relative ef\ufb01ciency of their local architecture,\nthey have still been prohibitively expensive to apply in large scale to high-resolution images. Luck-\nily, current GPUs, paired with a highly-optimized implementation of 2D convolution, are powerful\nenough to facilitate the training of interestingly-large CNNs, and recent datasets such as ImageNet\ncontain enough labeled examples to train such models without severe over\ufb01tting.\nThe speci\ufb01c contributions of this paper are as follows: we trained one of the largest convolutional\nneural networks to date on the subsets of ImageNet used in the ILSVRC-2010 and ILSVRC-2012\ncompetitions [2] and achieved by far the best results ever reported on these datasets. We wrote a\nhighly-optimized GPU implementation of 2D convolution and all the other operations inherent in\ntraining convolutional neural networks, which we make available publicly1. Our network contains\na number of new and unusual features which improve its performance and reduce its training time,\nwhich are detailed in Section 3. The size of our network made over\ufb01tting a signi\ufb01cant problem, even\nwith 1.2 million labeled training examples, so we used several effective techniques for preventing\nover\ufb01tting, which are described in Section 4. Our \ufb01nal network contains \ufb01ve convolutional and\nthree fully-connected layers, and this depth seems to be important: we found that removing any\nconvolutional layer (each of which contains no more than 1% of the model\u2019s parameters) resulted in\ninferior performance.\nIn the end, the network\u2019s size is limited mainly by the amount of memory available on current GPUs\nand by the amount of training time that we are willing to tolerate. Our network takes between \ufb01ve\nand six days to train on two GTX 580 3GB GPUs. All of our experiments suggest that our results\ncan be improved simply by waiting for faster GPUs and bigger datasets to become available.\n2 The Dataset\nImageNet is a dataset of over 15 million labeled high-resolution images belonging to roughly 22,000\ncategories. The images were collected from the web and labeled by human labelers using Ama-\nzon\u2019s Mechanical Turk crowd-sourcing tool. Starting in 2010, as part of the Pascal Visual Object\nChallenge, an annual competition called the ImageNet Large-Scale Visual Recognition Challenge\n(ILSVRC) has been held. ILSVRC uses a subset of ImageNet with roughly 1000 images in each of\n1000 categories. In all, there are roughly 1.2 million training images, 50,000 validation images, and\n150,000 testing images.\nILSVRC-2010 is the only version of ILSVRC for which the test set labels are available, so this is\nthe version on which we performed most of our experiments. Since we also entered our model in\nthe ILSVRC-2012 competition, in Section 6 we report our results on this version of the dataset as\nwell, for which test set labels are unavailable. On ImageNet, it is customary to report two error rates:\ntop-1 and top-5, where the top-5 error rate is the fraction of test images for which the correct label\nis not among the \ufb01ve labels considered most probable by the model.\nImageNet consists of variable-resolution images, while our system requires a constant input dimen-\nsionality. Therefore, we down-sampled the images to a \ufb01xed resolution of 256\u0002256. Given a\nrectangular image, we \ufb01rst rescaled the image such that the shorter side was of length 256, and then\ncropped out the central 256\u0002256patch from the resulting image. We did not pre-process the images\nin any other way, except for subtracting the mean activity over the training set from each pixel. So\nwe trained our network on the (centered) raw RGB values of the pixels.\n3 The Architecture\nThe architecture of our network is summarized in Figure 2. It contains eight learned layers \u2014\n\ufb01ve convolutional and three fully-connected. Below, we describe some of the novel or unusual\nfeatures of our network\u2019s architecture. Sections 3.1-3.4 are sorted according to our estimation of\ntheir importance, with the most important \ufb01rst.\n1http://code.google.com/p/cuda-convnet/\n2\n3.1 ReLU Nonlinearity\nFigure 1: A four-layer convolutional neural\nnetwork with ReLUs (solid line) reaches a 25%\ntraining error rate on CIFAR-10 six times faster\nthan an equivalent network with tanh neurons\n(dashed line) . The learning rates for each net-\nwork were chosen independently to make train-\ning as fast as possible. No regularization of\nany kind was employed. The magnitude of the\neffect demonstrated here varies with network\narchitecture, but networks with ReLUs consis-\ntently learn several times faster than equivalents\nwith saturating neurons.The standard way to model a neuron\u2019s output fas\na function of its input xis withf(x) = tanh(x)\norf(x) = (1 +e\u0000x)\u00001. In terms of training time\nwith gradient descent, these saturating nonlinearities\nare much slower than the non-saturating nonlinearity\nf(x) = max(0;x). Following Nair and Hinton [20],\nwe refer to neurons with this nonlinearity as Recti\ufb01ed\nLinear Units (ReLUs). Deep convolutional neural net-\nworks with ReLUs train several times faster than their\nequivalents with tanh units. This is demonstrated in\nFigure 1, which shows the number of iterations re-\nquired to reach 25% training error on the CIFAR-10\ndataset for a particular four-layer convolutional net-\nwork. This plot shows that we would not have been\nable to experiment with such large neural networks for\nthis work if we had used traditional saturating neuron\nmodels.\nWe are not the \ufb01rst to consider alternatives to tradi-\ntional neuron models in CNNs. For example, Jarrett\net al. [11] claim that the nonlinearity f(x) =jtanh(x)j\nworks particularly well with their type of contrast nor-\nmalization followed by local average pooling on the\nCaltech-101 dataset. However, on this dataset the pri-\nmary concern is preventing over\ufb01tting, so the effect\nthey are observing is different from the accelerated\nability to \ufb01t the training set which we report when us-\ning ReLUs. Faster learning has a great in\ufb02uence on the\nperformance of large models trained on large datasets.\n3.2 Training on Multiple GPUs\nA single GTX 580 GPU has only 3GB of memory, which limits the maximum size of the networks\nthat can be trained on it. It turns out that 1.2 million training examples are enough to train networks\nwhich are too big to \ufb01t on one GPU. Therefore we spread the net across two GPUs. Current GPUs\nare particularly well-suited to cross-GPU parallelization, as they are able to read from and write to\none another\u2019s memory directly, without going through host machine memory. The parallelization\nscheme that we employ essentially puts half of the kernels (or neurons) on each GPU, with one\nadditional trick: the GPUs communicate only in certain layers. This means that, for example, the\nkernels of layer 3 take input from all kernel maps in layer 2. However, kernels in layer 4 take input\nonly from those kernel maps in layer 3 which reside on the same GPU. Choosing the pattern of\nconnectivity is a problem for cross-validation, but this allows us to precisely tune the amount of\ncommunication until it is an acceptable fraction of the amount of computation.\nThe resultant architecture is somewhat similar to that of the \u201ccolumnar\u201d CNN employed by Cire\u00b8 san\net al. [5], except that our columns are not independent (see Figure 2). This scheme reduces our top-1\nand top-5 error rates by 1.7% and 1.2%, respectively, as compared with a net with half as many\nkernels in each convolutional layer trained on one GPU. The two-GPU net takes slightly less time\nto train than the one-GPU net2.\n2The one-GPU net actually has the same number of kernels as the two-GPU net in the \ufb01nal convolutional\nlayer. This is because most of the net\u2019s parameters are in the \ufb01rst fully-connected layer, which takes the last\nconvolutional layer as input. So to make the two nets have approximately the same number of parameters, we\ndid not halve the size of the \ufb01nal convolutional layer (nor the fully-conneced layers which follow). Therefore\nthis comparison is biased in favor of the one-GPU net, since it is bigger than \u201chalf the size\u201d of the two-GPU\nnet.\n3\n3.3 Local Response Normalization\nReLUs have the desirable property that they do not require input normalization to prevent them\nfrom saturating. If at least some training examples produce a positive input to a ReLU, learning will\nhappen in that neuron. However, we still \ufb01nd that the following local normalization scheme aids\ngeneralization. Denoting by ai\nx;ythe activity of a neuron computed by applying kernel iat position\n(x;y)and then applying the ReLU nonlinearity, the response-normalized activity bi\nx;yis given by\nthe expression\nbi\nx;y=ai\nx;y=0\n@k+\u000bmin(N\u00001;i+n=2)X\nj=max(0;i\u0000n=2)(aj\nx;y)21\nA\f\nwhere the sum runs over n\u201cadjacent\u201d kernel maps at the same spatial position, and Nis the total\nnumber of kernels in the layer. The ordering of the kernel maps is of course arbitrary and determined\nbefore training begins. This sort of response normalization implements a form of lateral inhibition\ninspired by the type found in real neurons, creating competition for big activities amongst neuron\noutputs computed using different kernels. The constants k;n;\u000b , and\fare hyper-parameters whose\nvalues are determined using a validation set; we used k= 2,n= 5,\u000b= 10\u00004, and\f= 0:75. We\napplied this normalization after applying the ReLU nonlinearity in certain layers (see Section 3.5).\nThis scheme bears some resemblance to the local contrast normalization scheme of Jarrett et al. [11],\nbut ours would be more correctly termed \u201cbrightness normalization\u201d, since we do not subtract the\nmean activity. Response normalization reduces our top-1 and top-5 error rates by 1.4% and 1.2%,\nrespectively. We also veri\ufb01ed the effectiveness of this", "doc_id": null, "embedding": null, "extra_info": null, "index": 0, "child_indices": [], "ref_doc_id": "b152b76c-e327-44f6-8205-029df6326941", "node_info": {"start": 0, "end": 13232}}, "2319589288123138198": {"text": "competition for big activities amongst neuron\noutputs computed using different kernels. The constants k;n;\u000b , and\fare hyper-parameters whose\nvalues are determined using a validation set; we used k= 2,n= 5,\u000b= 10\u00004, and\f= 0:75. We\napplied this normalization after applying the ReLU nonlinearity in certain layers (see Section 3.5).\nThis scheme bears some resemblance to the local contrast normalization scheme of Jarrett et al. [11],\nbut ours would be more correctly termed \u201cbrightness normalization\u201d, since we do not subtract the\nmean activity. Response normalization reduces our top-1 and top-5 error rates by 1.4% and 1.2%,\nrespectively. We also veri\ufb01ed the effectiveness of this scheme on the CIFAR-10 dataset: a four-layer\nCNN achieved a 13% test error rate without normalization and 11% with normalization3.\n3.4 Overlapping Pooling\nPooling layers in CNNs summarize the outputs of neighboring groups of neurons in the same kernel\nmap. Traditionally, the neighborhoods summarized by adjacent pooling units do not overlap (e.g.,\n[17, 11, 4]). To be more precise, a pooling layer can be thought of as consisting of a grid of pooling\nunits spaced spixels apart, each summarizing a neighborhood of size z\u0002zcentered at the location\nof the pooling unit. If we set s=z, we obtain traditional local pooling as commonly employed\nin CNNs. If we set s < z , we obtain overlapping pooling. This is what we use throughout our\nnetwork, with s= 2 andz= 3. This scheme reduces the top-1 and top-5 error rates by 0.4% and\n0.3%, respectively, as compared with the non-overlapping scheme s= 2;z= 2, which produces\noutput of equivalent dimensions. We generally observe during training that models with overlapping\npooling \ufb01nd it slightly more dif\ufb01cult to over\ufb01t.\n3.5 Overall Architecture\nNow we are ready to describe the overall architecture of our CNN. As depicted in Figure 2, the net\ncontains eight layers with weights; the \ufb01rst \ufb01ve are convolutional and the remaining three are fully-\nconnected. The output of the last fully-connected layer is fed to a 1000-way softmax which produces\na distribution over the 1000 class labels. Our network maximizes the multinomial logistic regression\nobjective, which is equivalent to maximizing the average across training cases of the log-probability\nof the correct label under the prediction distribution.\nThe kernels of the second, fourth, and \ufb01fth convolutional layers are connected only to those kernel\nmaps in the previous layer which reside on the same GPU (see Figure 2). The kernels of the third\nconvolutional layer are connected to all kernel maps in the second layer. The neurons in the fully-\nconnected layers are connected to all neurons in the previous layer. Response-normalization layers\nfollow the \ufb01rst and second convolutional layers. Max-pooling layers, of the kind described in Section\n3.4, follow both response-normalization layers as well as the \ufb01fth convolutional layer. The ReLU\nnon-linearity is applied to the output of every convolutional and fully-connected layer.\nThe \ufb01rst convolutional layer \ufb01lters the 224\u0002224\u00023input image with 96 kernels of size 11\u000211\u00023\nwith a stride of 4 pixels (this is the distance between the receptive \ufb01eld centers of neighboring\n3We cannot describe this network in detail due to space constraints, but it is speci\ufb01ed precisely by the code\nand parameter \ufb01les provided here: http://code.google.com/p/cuda-convnet/.\n4\nFigure 2: An illustration of the architecture of our CNN, explicitly showing the delineation of responsibilities\nbetween the two GPUs. One GPU runs the layer-parts at the top of the \ufb01gure while the other runs the layer-parts\nat the bottom. The GPUs communicate only at certain layers. The network\u2019s input is 150,528-dimensional, and\nthe number of neurons in the network\u2019s remaining layers is given by 253,440\u2013186,624\u201364,896\u201364,896\u201343,264\u2013\n4096\u20134096\u20131000.\nneurons in a kernel map). The second convolutional layer takes as input the (response-normalized\nand pooled) output of the \ufb01rst convolutional layer and \ufb01lters it with 256 kernels of size 5\u00025\u000248.\nThe third, fourth, and \ufb01fth convolutional layers are connected to one another without any intervening\npooling or normalization layers. The third convolutional layer has 384 kernels of size 3\u00023\u0002\n256connected to the (normalized, pooled) outputs of the second convolutional layer. The fourth\nconvolutional layer has 384 kernels of size 3\u00023\u0002192, and the \ufb01fth convolutional layer has 256\nkernels of size 3\u00023\u0002192. The fully-connected layers have 4096 neurons each.\n4 Reducing Over\ufb01tting\nOur neural network architecture has 60 million parameters. Although the 1000 classes of ILSVRC\nmake each training example impose 10 bits of constraint on the mapping from image to label, this\nturns out to be insuf\ufb01cient to learn so many parameters without considerable over\ufb01tting. Below, we\ndescribe the two primary ways in which we combat over\ufb01tting.\n4.1 Data Augmentation\nThe easiest and most common method to reduce over\ufb01tting on image data is to arti\ufb01cially enlarge\nthe dataset using label-preserving transformations (e.g., [25, 4, 5]). We employ two distinct forms\nof data augmentation, both of which allow transformed images to be produced from the original\nimages with very little computation, so the transformed images do not need to be stored on disk.\nIn our implementation, the transformed images are generated in Python code on the CPU while the\nGPU is training on the previous batch of images. So these data augmentation schemes are, in effect,\ncomputationally free.\nThe \ufb01rst form of data augmentation consists of generating image translations and horizontal re\ufb02ec-\ntions. We do this by extracting random 224\u0002224patches (and their horizontal re\ufb02ections) from the\n256\u0002256images and training our network on these extracted patches4. This increases the size of our\ntraining set by a factor of 2048, though the resulting training examples are, of course, highly inter-\ndependent. Without this scheme, our network suffers from substantial over\ufb01tting, which would have\nforced us to use much smaller networks. At test time, the network makes a prediction by extracting\n\ufb01ve224\u0002224patches (the four corner patches and the center patch) as well as their horizontal\nre\ufb02ections (hence ten patches in all), and averaging the predictions made by the network\u2019s softmax\nlayer on the ten patches.\nThe second form of data augmentation consists of altering the intensities of the RGB channels in\ntraining images. Speci\ufb01cally, we perform PCA on the set of RGB pixel values throughout the\nImageNet training set. To each training image, we add multiples of the found principal components,\n4This is the reason why the input images in Figure 2 are 224\u0002224\u00023-dimensional.\n5\nwith magnitudes proportional to the corresponding eigenvalues times a random variable drawn from\na Gaussian with mean zero and standard deviation 0.1. Therefore to each RGB image pixel Ixy=\n[IR\nxy;IG\nxy;IB\nxy]Twe add the following quantity:\n[p1;p2;p3][\u000b1\u00151;\u000b2\u00152;\u000b3\u00153]T\nwhere piand\u0015iareith eigenvector and eigenvalue of the 3\u00023covariance matrix of RGB pixel\nvalues, respectively, and \u000biis the aforementioned random variable. Each \u000biis drawn only once\nfor all the pixels of a particular training image until that image is used for training again, at which\npoint it is re-drawn. This scheme approximately captures an important property of natural images,\nnamely, that object identity is invariant to changes in the intensity and color of the illumination. This\nscheme reduces the top-1 error rate by over 1%.\n4.2 Dropout\nCombining the predictions of many different models is a very successful way to reduce test errors\n[1, 3], but it appears to be too expensive for big neural networks that already take several days\nto train. There is, however, a very ef\ufb01cient version of model combination that only costs about a\nfactor of two during training. The recently-introduced technique, called \u201cdropout\u201d [10], consists\nof setting to zero the output of each hidden neuron with probability 0.5. The neurons which are\n\u201cdropped out\u201d in this way do not contribute to the forward pass and do not participate in back-\npropagation. So every time an input is presented, the neural network samples a different architecture,\nbut all these architectures share weights. This technique reduces complex co-adaptations of neurons,\nsince a neuron cannot rely on the presence of particular other neurons. It is, therefore, forced to\nlearn more robust features that are useful in conjunction with many different random subsets of the\nother neurons. At test time, we use all the neurons but multiply their outputs by 0.5, which is a\nreasonable approximation to taking the geometric mean of the predictive distributions produced by\nthe exponentially-many dropout networks.\nWe use dropout in the \ufb01rst two fully-connected layers of Figure 2. Without dropout, our network ex-\nhibits substantial over\ufb01tting. Dropout roughly doubles the number of iterations required to converge.\nFigure 3: 96 convolutional kernels of size\n11\u000211\u00023learned by the \ufb01rst convolutional\nlayer on the 224\u0002224\u00023input images. The\ntop 48 kernels were learned on GPU 1 while\nthe bottom 48 kernels were learned on GPU\n2. See Section 6.1 for details.5 Details of learning\nWe trained our models using stochastic gradient descent\nwith a batch size of 128 examples, momentum of 0.9, and\nweight decay of 0.0005. We found that this small amount\nof weight decay was important for the model to learn. In\nother words, weight decay here is not merely a regularizer:\nit reduces the model\u2019s training error. The update rule for\nweightwwas\nvi+1 := 0:9\u0001vi\u00000:0005\u0001\u000f\u0001wi\u0000\u000f\u0001\u001c@L\n@w\f\f\nwi\u001d\nDi\nwi+1 :=wi+vi+1\nwhereiis the iteration index, vis the momentum variable, \u000fis the learning rate, andD\n@L\n@w\f\f\nwiE\nDiis\nthe average over the ith batchDiof the derivative of the objective with respect to w, evaluated at\nwi.\nWe initialized the weights in each layer from a zero-mean Gaussian distribution with standard de-\nviation 0.01. We initialized the neuron biases in the second, fourth, and \ufb01fth convolutional layers,\nas well as in the fully-connected hidden layers, with the constant 1. This initialization accelerates\nthe early stages of learning by providing the ReLUs with positive inputs. We initialized the neuron\nbiases in the remaining layers with the constant 0.\nWe used an equal learning rate for all layers, which we adjusted manually throughout training.\nThe heuristic which we followed was to divide the learning rate by 10 when the validation error\nrate stopped improving with the current learning rate. The learning rate was initialized at 0.01 and\n6\nreduced three times prior to termination. We trained the network for roughly 90 cycles through the\ntraining set of 1.2 million images, which took \ufb01ve to six days on two NVIDIA GTX 580 3GB GPUs.\n6 Results\nOur results on ILSVRC-2010 are summarized in Table 1. Our network achieves top-1 and top-5\ntest set error rates of 37.5% and17.0%5. The best performance achieved during the ILSVRC-\n2010 competition was 47.1% and 28.2% with an approach that averages the predictions produced\nfrom six sparse-coding models trained on different features [2], and since then the best pub-\nlished results are 45.7% and 25.7% with an approach that averages the predictions of two classi-\n\ufb01ers trained on Fisher Vectors (FVs) computed from two types of densely-sampled features [24].\nModel Top-1 Top-5\nSparse coding [2] 47.1% 28.2%\nSIFT + FVs [24] 45.7% 25.7%\nCNN 37.5% 17.0%\nTable 1: Comparison of results on ILSVRC-\n2010 test set. In italics are best results\nachieved by others.We also entered our model in the ILSVRC-2012 com-\npetition and report our results in Table 2. Since the\nILSVRC-2012 test set labels are not publicly available,\nwe cannot report test error rates for all the models that\nwe tried. In the remainder of this paragraph, we use\nvalidation and test error rates interchangeably because\nin our experience they do not differ by more than 0.1%\n(see Table 2). The CNN described in this paper achieves\na top-5 error rate of 18.2%. Averaging the predictions\nof \ufb01ve similar CNNs gives an error rate of 16.4%. Training one CNN, with an extra sixth con-\nvolutional layer over the last pooling layer, to classify the entire ImageNet Fall 2011 release\n(15M images, 22K categories), and then \u201c\ufb01ne-tuning\u201d it on ILSVRC-2012 gives an error rate of\n16.6%. Averaging the predictions of two CNNs that were pre-trained on the entire Fall 2011 re-\nlease with the aforementioned \ufb01ve CNNs gives an error rate of 15.3% . The second-best con-\ntest entry achieved an error rate of 26.2% with an approach that averages the predictions of sev-\neral classi\ufb01ers trained on FVs computed from different types of densely-sampled features [7].\nModel Top-1 (val) Top-5 (val) Top-5 (test)\nSIFT + FVs [7] \u2014 \u2014 26.2%\n1 CNN 40.7% 18.2% \u2014\n5 CNNs 38.1% 16.4% 16.4%\n1 CNN* 39.0%", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [], "ref_doc_id": "b152b76c-e327-44f6-8205-029df6326941", "node_info": {"start": 12647, "end": 25442}}, "5179757469735128740": {"text": "it on ILSVRC-2012 gives an error rate of\n16.6%. Averaging the predictions of two CNNs that were pre-trained on the entire Fall 2011 re-\nlease with the aforementioned \ufb01ve CNNs gives an error rate of 15.3% . The second-best con-\ntest entry achieved an error rate of 26.2% with an approach that averages the predictions of sev-\neral classi\ufb01ers trained on FVs computed from different types of densely-sampled features [7].\nModel Top-1 (val) Top-5 (val) Top-5 (test)\nSIFT + FVs [7] \u2014 \u2014 26.2%\n1 CNN 40.7% 18.2% \u2014\n5 CNNs 38.1% 16.4% 16.4%\n1 CNN* 39.0% 16.6% \u2014\n7 CNNs* 36.7% 15.4% 15.3%\nTable 2: Comparison of error rates on ILSVRC-2012 validation and\ntest sets. In italics are best results achieved by others. Models with an\nasterisk* were \u201cpre-trained\u201d to classify the entire ImageNet 2011 Fall\nrelease. See Section 6 for details.Finally, we also report our error\nrates on the Fall 2009 version of\nImageNet with 10,184 categories\nand 8.9 million images. On this\ndataset we follow the convention\nin the literature of using half of\nthe images for training and half\nfor testing. Since there is no es-\ntablished test set, our split neces-\nsarily differs from the splits used\nby previous authors, but this does\nnot affect the results appreciably.\nOur top-1 and top-5 error rates\non this dataset are 67.4% and\n40.9% , attained by the net described above but with an additional, sixth convolutional layer over the\nlast pooling layer. The best published results on this dataset are 78.1% and 60.9% [19].\n6.1 Qualitative Evaluations\nFigure 3 shows the convolutional kernels learned by the network\u2019s two data-connected layers. The\nnetwork has learned a variety of frequency- and orientation-selective kernels, as well as various col-\nored blobs. Notice the specialization exhibited by the two GPUs, a result of the restricted connec-\ntivity described in Section 3.5. The kernels on GPU 1 are largely color-agnostic, while the kernels\non on GPU 2 are largely color-speci\ufb01c. This kind of specialization occurs during every run and is\nindependent of any particular random weight initialization (modulo a renumbering of the GPUs).\n5The error rates without averaging predictions over ten patches as described in Section 4.1 are 39.0% and\n18.3%.\n7\nFigure 4: (Left) Eight ILSVRC-2010 test images and the \ufb01ve labels considered most probable by our model.\nThe correct label is written under each image, and the probability assigned to the correct label is also shown\nwith a red bar (if it happens to be in the top 5). (Right) Five ILSVRC-2010 test images in the \ufb01rst column. The\nremaining columns show the six training images that produce feature vectors in the last hidden layer with the\nsmallest Euclidean distance from the feature vector for the test image.\nIn the left panel of Figure 4 we qualitatively assess what the network has learned by computing its\ntop-5 predictions on eight test images. Notice that even off-center objects, such as the mite in the\ntop-left, can be recognized by the net. Most of the top-5 labels appear reasonable. For example,\nonly other types of cat are considered plausible labels for the leopard. In some cases (grille, cherry)\nthere is genuine ambiguity about the intended focus of the photograph.\nAnother way to probe the network\u2019s visual knowledge is to consider the feature activations induced\nby an image at the last, 4096-dimensional hidden layer. If two images produce feature activation\nvectors with a small Euclidean separation, we can say that the higher levels of the neural network\nconsider them to be similar. Figure 4 shows \ufb01ve images from the test set and the six images from\nthe training set that are most similar to each of them according to this measure. Notice that at the\npixel level, the retrieved training images are generally not close in L2 to the query images in the \ufb01rst\ncolumn. For example, the retrieved dogs and elephants appear in a variety of poses. We present the\nresults for many more test images in the supplementary material.\nComputing similarity by using Euclidean distance between two 4096-dimensional, real-valued vec-\ntors is inef\ufb01cient, but it could be made ef\ufb01cient by training an auto-encoder to compress these vectors\nto short binary codes. This should produce a much better image retrieval method than applying auto-\nencoders to the raw pixels [14], which does not make use of image labels and hence has a tendency\nto retrieve images with similar patterns of edges, whether or not they are semantically similar.\n7 Discussion\nOur results show that a large, deep convolutional neural network is capable of achieving record-\nbreaking results on a highly challenging dataset using purely supervised learning. It is notable\nthat our network\u2019s performance degrades if a single convolutional layer is removed. For example,\nremoving any of the middle layers results in a loss of about 2% for the top-1 performance of the\nnetwork. So the depth really is important for achieving our results.\nTo simplify our experiments, we did not use any unsupervised pre-training even though we expect\nthat it will help, especially if we obtain enough computational power to signi\ufb01cantly increase the\nsize of the network without obtaining a corresponding increase in the amount of labeled data. Thus\nfar, our results have improved as we have made our network larger and trained it longer but we still\nhave many orders of magnitude to go in order to match the infero-temporal pathway of the human\nvisual system. Ultimately we would like to use very large and deep convolutional nets on video\nsequences where the temporal structure provides very helpful information that is missing or far less\nobvious in static images.\n8\nReferences\n[1] R.M. Bell and Y . Koren. Lessons from the net\ufb02ix prize challenge. ACM SIGKDD Explorations Newsletter ,\n9(2):75\u201379, 2007.\n[2] A. Berg, J. Deng, and L. Fei-Fei. Large scale visual recognition challenge 2010. www.image-\nnet.org/challenges. 2010.\n[3] L. Breiman. Random forests. Machine learning , 45(1):5\u201332, 2001.\n[4] D. Cire\u00b8 san, U. Meier, and J. Schmidhuber. Multi-column deep neural networks for image classi\ufb01cation.\nArxiv preprint arXiv:1202.2745 , 2012.\n[5] D.C. Cire\u00b8 san, U. Meier, J. Masci, L.M. Gambardella, and J. Schmidhuber. High-performance neural\nnetworks for visual object classi\ufb01cation. Arxiv preprint arXiv:1102.0183 , 2011.\n[6] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei. ImageNet: A Large-Scale Hierarchical\nImage Database. In CVPR09 , 2009.\n[7] J. Deng, A. Berg, S. Satheesh, H. Su, A. Khosla, and L. Fei-Fei. ILSVRC-2012 , 2012. URL\nhttp://www.image-net.org/challenges/LSVRC/2012/ .\n[8] L. Fei-Fei, R. Fergus, and P. Perona. Learning generative visual models from few training examples: An\nincremental bayesian approach tested on 101 object categories. Computer Vision and Image Understand-\ning, 106(1):59\u201370, 2007.\n[9] G. Grif\ufb01n, A. Holub, and P. Perona. Caltech-256 object category dataset. Technical Report 7694, Cali-\nfornia Institute of Technology, 2007. URL http://authors.library.caltech.edu/7694 .\n[10] G.E. Hinton, N. Srivastava, A. Krizhevsky, I. Sutskever, and R.R. Salakhutdinov. Improving neural net-\nworks by preventing co-adaptation of feature detectors. arXiv preprint arXiv:1207.0580 , 2012.\n[11] K. Jarrett, K. Kavukcuoglu, M. A. Ranzato, and Y . LeCun. What is the best multi-stage architecture for\nobject recognition? In International Conference on Computer Vision , pages 2146\u20132153. IEEE, 2009.\n[12] A. Krizhevsky. Learning multiple layers of features from tiny images. Master\u2019s thesis, Department of\nComputer Science, University of Toronto, 2009.\n[13] A. Krizhevsky. Convolutional deep belief networks on cifar-10. Unpublished manuscript , 2010.\n[14] A. Krizhevsky and G.E. Hinton. Using very deep autoencoders for content-based image retrieval. In\nESANN , 2011.\n[15] Y . Le Cun, B. Boser, J.S. Denker, D. Henderson, R.E. Howard, W. Hubbard, L.D. Jackel, et al. Hand-\nwritten digit recognition with a back-propagation network. In Advances in neural information processing\nsystems , 1990.\n[16] Y . LeCun, F.J. Huang, and L. Bottou. Learning methods for generic object recognition with invariance to\npose and lighting. In Computer Vision and Pattern Recognition, 2004. CVPR 2004. Proceedings of the\n2004 IEEE Computer Society Conference on , volume 2, pages II\u201397. IEEE, 2004.\n[17] Y . LeCun, K. Kavukcuoglu, and C. Farabet. Convolutional networks and applications in vision. In\nCircuits and Systems (ISCAS), Proceedings of 2010 IEEE International Symposium on , pages 253\u2013256.\nIEEE, 2010.\n[18] H. Lee, R. Grosse, R. Ranganath, and A.Y . Ng. Convolutional deep belief networks for scalable unsuper-\nvised learning of hierarchical representations. In Proceedings of the 26th Annual International Conference\non Machine Learning , pages 609\u2013616. ACM, 2009.\n[19] T. Mensink, J. Verbeek, F. Perronnin, and G. Csurka. Metric Learning for Large Scale Image Classi\ufb01-\ncation: Generalizing to New Classes at Near-Zero Cost. In ECCV - European Conference on Computer\nVision , Florence, Italy, October 2012.\n[20] V . Nair and G. E. Hinton. Recti\ufb01ed linear units improve restricted boltzmann machines. In Proc. 27th\nInternational Conference on Machine Learning , 2010.\n[21] N. Pinto, D.D. Cox, and J.J. DiCarlo. Why is real-world visual object recognition hard? PLoS computa-\ntional biology , 4(1):e27, 2008.\n[22] N. Pinto, D. Doukhan, J.J. DiCarlo, and D.D. Cox. A high-throughput screening approach to discovering\ngood forms of biologically inspired visual representation. PLoS computational biology , 5(11):e1000579,\n2009.\n[23] B.C. Russell, A. Torralba, K.P. Murphy, and W.T. Freeman. Labelme: a database and web-based tool for\nimage annotation. International journal of computer vision , 77(1):157\u2013173, 2008.\n[24] J. S\u00e1nchez and F. Perronnin. High-dimensional signature compression for large-scale image classi\ufb01cation.\nInComputer Vision and Pattern Recognition (CVPR), 2011 IEEE Conference on , pages 1665\u20131672. IEEE,\n2011.\n[25] P.Y . Simard, D. Steinkraus, and J.C. Platt. Best practices for convolutional neural networks applied to\nvisual document analysis. In Proceedings of the Seventh International Conference on Document Analysis\nand Recognition , volume 2, pages 958\u2013962, 2003.\n[26] S.C. Turaga, J.F. Murray, V . Jain, F. Roth, M. Helmstaedter, K. Briggman, W. Denk, and H.S. Seung. Con-\nvolutional networks can learn to generate af\ufb01nity graphs for image segmentation. Neural Computation ,\n22(2):511\u2013538, 2010.\n9", "doc_id": null, "embedding": null, "extra_info": null, "index": 2, "child_indices": [], "ref_doc_id": "b152b76c-e327-44f6-8205-029df6326941", "node_info": {"start": 25484, "end": 35918}}}, "id_map": {"ca05bb1f-3aaf-42da-ab6b-9b8fd865abaf": 8448457062516059212, "81235794-ec77-4d94-8978-139c2c19d5d8": 2319589288123138198, "7c4386ef-80ef-465b-8c3d-9f117b40f19a": 5179757469735128740}, "embedding_dict": {"ca05bb1f-3aaf-42da-ab6b-9b8fd865abaf": [-0.004547515418380499, 0.01572337932884693, 0.013725227676331997, -0.0070348684675991535, 0.014510707929730415, 0.01114141196012497, 0.00029670813819393516, -0.0027939658612012863, -0.02102881297469139, -0.025893276557326317, 0.014207540079951286, 0.03602183237671852, -0.014386684633791447, 0.005860093515366316, -0.0033951334189623594, 0.022503310814499855, 0.026830339804291725, 0.015089482069015503, 0.001028358587063849, -0.03604939207434654, -0.016233250498771667, 0.0052330875769257545, -0.016536418348550797, -0.02565900981426239, -0.0190582238137722, 0.003762035397812724, 0.013945713639259338, -0.024115610867738724, 0.009653134271502495, -0.01831408403813839, 0.004723214544355869, 0.0006334654171951115, -0.005536255426704884, -0.0031677577644586563, -0.00880564283579588, 0.005436347797513008, 0.012760603800415993, -0.022834038361907005, 0.005308879539370537, 0.003069572849199176, 0.04442784562706947, -0.0017793875886127353, -0.015282407402992249, -0.020119309425354004, -0.0011920002289116383, 0.0069142901338636875, -0.0035656653344631195, -0.023164767771959305, -0.0016407228540629148, 0.03271454945206642, 0.016756905242800713, 0.02594839781522751, 0.008950336836278439, -0.016081668436527252, -0.04067959263920784, -0.009722036309540272, -0.023233668878674507, 0.010865805670619011, 0.013070661574602127, -0.03626988083124161, 0.00615292601287365, 0.0006209769635461271, -0.03128139302134514, 0.010335261933505535, -0.010535077191889286, -0.02071186527609825, -0.006256278604269028, 0.018741274252533913, 0.012292071245610714, -0.012912186793982983, 0.014235100708901882, 0.0233576912432909, -0.009019238874316216, -0.009976972825825214, 0.025521207600831985, -0.0009939076844602823, -0.0015692372107878327, -0.009267284534871578, -0.008178637363016605, -0.018424326553940773, 0.023426594212651253, -0.025907056406140327, -0.014028395526111126, 0.0019671448972076178, 0.011175863444805145, -0.006638683378696442, -0.008757411502301693, 0.003762035397812724, -0.004678428638726473, -0.005608601961284876, 0.03037188947200775, 0.023798663169145584, 0.02935214340686798, -0.004282243549823761, -0.023550616577267647, -0.0015218673506751657, -0.01282261498272419, 0.007179562002420425, -0.006655908655375242, -0.017197875306010246, -0.012374753132462502, -0.002731954213231802, -0.0040858737193048, -0.018093599006533623, -0.005825642496347427, -0.003872278146445751, 0.00024330928863491863, 0.009074360132217407, 0.02462548390030861, 0.008426683954894543, 0.01167884562164545, 0.02603107877075672, -0.0007686851313337684, -0.030867982655763626, -0.0008746215607970953, -0.005505249369889498, 0.02893873304128647, -0.02430853620171547, 0.013463401235640049, -0.010610869154334068, -0.01030770130455494, 0.003751700045540929, 0.0419473834335804, -0.008757411502301693, 0.0338720977306366, -0.009914961643517017, -0.014441805891692638, -0.021717829629778862, 0.0015520118176937103, -0.008964117616415024, 0.01264347042888403, 0.003627676982432604, 0.0029042086098343134, -0.015737159177660942, -0.010535077191889286, 0.016577759757637978, 0.023082084953784943, -0.0003880029544234276, -0.0033968561328947544, -0.0032366595696657896, 0.012671031057834625, 0.014152418822050095, -0.0109829381108284, -0.0060357931070029736, -0.006817827932536602, 0.035828907042741776, -0.023840004578232765, 0.026816559955477715, -0.012209389358758926, 0.003314174013212323, -0.014910337515175343, -0.03224601596593857, -0.006342405918985605, 0.008199308067560196, 0.006156370975077152, 0.030399451032280922, -0.008157966658473015, 0.03128139302134514, -0.00332623184658587, -0.00964624434709549, 0.006146035622805357, 0.011017389595508575, -0.02538340352475643, 0.0034209717996418476, 0.02694058232009411, 0.014235100708901882, 0.03607695549726486, 0.0010877862805500627, -0.006659353617578745, -0.003091965802013874, -0.003357237670570612, 0.022585991770029068, -0.027064606547355652, 0.013222245499491692, 0.03858497738838196, -0.003188428236171603, 0.020064188167452812, -0.010734892450273037, -0.03373429551720619, -0.011286105960607529, 0.001410763245075941, 0.015571794472634792, 0.029159218072891235, 0.0023478269577026367, -0.00378959602676332, 0.004661202896386385, 0.04464833065867424, -0.0010197458323091269, -0.008068394847214222, -0.005691284313797951, 0.0010412776609882712, 0.012381643988192081, -0.02331635169684887, -0.017211657017469406, -0.6239742040634155, -0.020477598533034325, 0.020201992243528366, -0.002533861668780446, -0.0036035613156855106, 0.0190582238137722, -0.002945549553260207, -0.009866730310022831, -0.021456003189086914, 0.025204258039593697, -0.008357781916856766, -0.013490961864590645, -0.003393410937860608, -0.007255353964865208, -0.023054523393511772, -0.03527769446372986, -0.014152418822050095, 0.004306359216570854, 0.008833203464746475, 0.0005860954988747835, -0.0015494279796257615, 0.015365089289844036, -0.01380101963877678, 0.01701873168349266, -0.009852949529886246, 0.013201574794948101, 0.0043787057511508465, -0.010493735782802105, 0.02294428087770939, 0.00325388484634459, -0.0232887901365757, 0.00751029048115015, 0.02760203927755356, -0.0017776649910956621, 0.05131801962852478, -0.02334391139447689, -0.007799677550792694, 0.02429475635290146, 0.02400536835193634, 0.05870428681373596, -0.027808744460344315, -0.030427010729908943, 0.017487263306975365, 0.005687839351594448, -0.00800638273358345, 0.008199308067560196, -0.0123403025791049, 0.0059221051633358, 0.0099907536059618, -0.017252996563911438, -0.0012462603626772761, -0.007503400091081858, -0.02027089335024357, -0.01380101963877678, 0.009287955239415169, -0.019168466329574585, 0.007634313311427832, -0.018548350781202316, 0.009556672535836697, -0.022420627996325493, 9.404011507285759e-05, -0.0070452033542096615, -0.002337491838261485, -0.02663741447031498, -0.021772950887680054, 0.0008720377227291465, -0.011534152552485466, -0.026527171954512596, 0.006504324730485678, -0.01266414113342762, 0.014441805891692638, 0.0032418272458016872, 0.02630668692290783, -0.014166198670864105, -0.006721365265548229, 0.022599773481488228, 0.015199725516140461, -0.014221319928765297, 0.00337101798504591, 0.018589690327644348, 0.004623307380825281, -0.02304074354469776, -0.0006782515556551516, 0.005133179947733879, -0.009618683718144894, 0.012615909799933434, -0.012705481611192226, 0.025769252330064774, -0.011492811143398285, -6.27113549853675e-05, 0.0024253414012491703, 0.009460209868848324, -0.018603472039103508, -0.048837557435035706, -0.012925967574119568, 0.022145021706819534, -0.027546918019652367, -2.0926214347127825e-05, 0.009742707014083862, -0.02299940213561058, 0.003703468944877386, -0.011106961406767368, 0.0023150986526161432, 0.0028163588140159845, 0.021786732599139214, 0.013242915272712708, -0.006459538824856281, 0.0260035190731287, 0.026871681213378906, -0.03133651241660118, -0.0219658762216568, -0.000798829598352313, -0.017942015081644058, 0.0199815072119236, 0.00025859687593765557, -0.02027089335024357, -0.004299468826502562, 0.015874961391091347, 0.015351309441030025, -0.008357781916856766, 0.009894290938973427, -0.010087215341627598, 0.009570452384650707, 0.001035248744301498, -0.013222245499491692, -0.0035139890387654305, -0.011368787847459316, 0.0010619481327012181, -0.01730811782181263, -0.015819840133190155, 0.008895215578377247, 0.005515584722161293, 0.029407264664769173, -0.02696814388036728, 0.017473483458161354, 0.020863449200987816, 0.01064531970769167, 0.010314591228961945, -0.03304527699947357, -0.020077968016266823, -0.009735817089676857, -0.004203006625175476, 0.0041168793104588985, 0.015130823478102684, -0.012429875321686268, 0.009839169681072235, -0.0067833769135177135, 0.0169360488653183, -0.001865514786913991, -0.0023616072721779346, -0.002382277976721525, -0.014882776886224747, -0.013008649460971355, -0.005587931722402573, 0.007014197763055563, -0.009177712723612785, -0.0014701910549774766, -0.035167451947927475, -0.0050642783753573895, -0.045144423842430115, 0.012243839912116528, 0.016894707456231117, -0.001129988580942154, 0.02502511441707611, -0.005205526947975159, 0.00023986421001609415, -0.013098222203552723, 0.0427466444671154, -0.009866730310022831, -0.018148720264434814, 0.009632464498281479, -0.030537253245711327, 0.0016484742518514395, 0.025783034041523933, 0.004599191714078188, 0.014069736935198307, -0.019554315134882927, -0.0118442103266716, 0.0014081794070079923, -0.003861942794173956, 0.019457852467894554, 0.006146035622805357, -0.013008649460971355, -0.018148720264434814, 0.024404998868703842, 0.018451888114213943, 0.024060489609837532, -8.725759835215285e-05, -0.02993091754615307, 0.011127632111310959, 0.01102427951991558, 0.008915886282920837, -0.005925550125539303, 0.018424326553940773, -0.007841018959879875, 0.022820258513092995, 0.022875379770994186, -0.02364707924425602, 0.0008203614270314574, 0.025755472481250763, 0.006445758510380983, 0.00664901826530695, 0.005925550125539303, 0.006018567364662886, 0.02061540260910988, -0.014524487778544426, 0.013070661574602127, -0.03362405300140381, 0.003672463120892644, 0.0017165147000923753, 0.009219053201377392, 0.00258726067841053, -0.026747656986117363, -0.023275010287761688, 0.009818498976528645, 0.05090460926294327, -0.00864716898649931, 0.014827655628323555, -0.0059944516979157925, -0.0004030752170365304, -0.005904879420995712, -0.0034313069190829992, 0.023206107318401337, 0.0033813531044870615, -0.0069280704483389854, 0.00542256748303771, 0.002475295215845108, 0.014620950445532799, 0.016867147758603096, -0.028111912310123444, -0.008964117616415024, 0.012374753132462502, 0.026472050696611404, 0.01515838410705328, -0.001278127427212894, 0.01400083489716053, 0.039522040635347366, -0.0016303876182064414, 0.02572791278362274, -0.006962521467357874, 0.016426175832748413, 0.011603053659200668, 0.0038653879892081022, -0.01398016419261694, 0.02429475635290146, 0.011733966879546642, 0.007131330668926239, 0.029407264664769173, -0.019154684618115425, 0.0007083960808813572, 0.008495585061609745, 0.013311817310750484, -0.016095448285341263, -0.0017130696214735508, -0.0033434571232646704, -0.01572337932884693, 0.009108810685575008, -0.003569110529497266, 0.02429475635290146, 0.021428443491458893, 0.016784464940428734, 0.0010111330775544047, 0.037151820957660675, -0.01268481183797121, 0.02134576067328453, -0.016495078802108765, 0.018920419737696648, -0.009088139981031418, -0.00451306439936161, 0.0011713296407833695, -0.028249716386198997, -0.040128376334905624, 0.01661910116672516, -0.02494243159890175, -0.003820601850748062, 0.00449583912268281, -0.003634567139670253, 0.008523145690560341, 0.023454153910279274, 0.01732189953327179, -0.014455586671829224, -0.02338525280356407, 0.019554315134882927, 0.01930626854300499, 0.011658175848424435, -0.01762506738305092, -0.05297166109085083, 0.01067977026104927, -0.010541967116296291, -2.5313316655228846e-05, -0.020822107791900635, 0.0155166732147336, -0.020753206685185432, 0.0027939658612012863, -0.02863556519150734, -0.006804047618061304, 0.04197494313120842, -0.012987978756427765, -0.0022651448380202055, 0.012285181321203709, 0.025741692632436752, 0.008764302358031273, -0.006996972486376762, -0.004488948732614517, 0.037537671625614166, 0.0002659176825545728, -0.014786315150558949, -0.0034313069190829992, -0.016095448285341263, -0.0003156561288051307, 0.027918986976146698, 0.009067470207810402, -0.00018291259766556323, 0.012195608578622341, 0.023481715470552444, 0.00426501827314496, 0.0042512379586696625, 0.00417200056836009, 0.026237783953547478, 0.007269134279340506, -0.00449583912268281, -0.016150569543242455, -0.029875796288251877, -0.013056880794465542, 0.02729887142777443, 0.03037188947200775, -0.0269957035779953, 0.006879839114844799, -0.014124858193099499, -0.012767493724822998, -0.030785299837589264, 0.0017707748338580132, 0.010555747896432877, 0.016867147758603096, -0.01568203791975975, -0.010755562223494053, 0.003064405173063278, 0.019430292770266533, 0.02295806258916855, 0.006118474993854761, 0.019843703135848045, -0.01150659192353487, -0.00932929664850235, -0.008619608357548714, 0.003686243435367942, 0.0196507778018713, 0.04167177528142929, 0.01134122721850872, 0.023757321760058403, -0.014827655628323555, 0.03290747478604317, 0.021731611341238022, 0.01264347042888403, -0.027050824835896492, 0.001325497287325561, 0.03191528841853142, 0.017073852941393852, -0.010156117379665375, -0.002284092828631401, 0.025810593739151955, 0.01497923955321312, 0.032466500997543335, 0.02833239734172821, -0.0054811337031424046, 0.02204855903983116, 0.007572301663458347, 0.005450128111988306, -0.0020326015073806047, -0.011423909105360508, -0.023812443017959595, 0.02100125141441822, 0.04652245715260506, -0.02002284675836563, -0.03362405300140381, 0.015502892434597015, -0.0056671686470508575, -0.037124261260032654, -0.016908489167690277, -0.024584142491221428, -0.0256727896630764, -0.010245689190924168, -0.018079817295074463, -0.007303585298359394, 0.0020739424508064985, -0.02466682530939579, -0.012471215799450874, 0.01547533180564642, -0.008736741729080677, -0.030812861397862434, 0.0024649598635733128, -0.01898932084441185, 0.009088139981031418, -0.025424744933843613, -0.0020084858406335115, -0.005997897125780582, -0.033541370183229446, -0.025245599448680878, -0.010776232928037643, 0.016508858650922775, 0.022145021706819534, 0.013098222203552723, -0.003954960033297539, -0.007889250293374062, 0.03125383332371712, -0.00191719108261168, -0.008943446911871433, -0.005584486294537783, -0.023123426362872124, 0.015930084511637688, -0.0058635384775698185, 0.014896557666361332, -0.008867654949426651, -0.003920509479939938, 0.006897064857184887, 0.03034432977437973, -0.012126707471907139, -0.004502729047089815, 0.0054949140176177025, 0.018451888114213943, -0.0029851682484149933, 0.017418362200260162, -0.0032349370885640383, 0.00952222105115652, -0.037510111927986145, 0.019912604242563248, -0.013697667047381401, -0.001194584066979587, -0.018575910478830338, -0.0005817891214974225, -0.01448314730077982, 0.01728055812418461, -0.006256278604269028, 0.0037138040643185377, 0.01795579493045807, 0.025934617966413498, -0.019237367436289787, 0.010300811380147934, 0.0024063934106379747, -0.0008526591118425131, 0.030867982655763626, 0.0027302317321300507, 0.00449583912268281, 0.0024356767535209656, -0.015117042697966099, 0.014607170596718788, 0.0017061794642359018, 0.017542384564876556, -0.011286105960607529, -0.014207540079951286, 0.019085783511400223, -7.9613811976742e-05, -0.025755472481250763, -0.02572791278362274, 0.009542891755700111, -0.009942522272467613, 0.02399158850312233, -0.016825806349515915, -0.0412859246134758, -0.019802361726760864, -5.6682452850509435e-05, -0.0018534569535404444, 0.02802922949194908, 0.0062838392332196236, -0.01999528706073761, -0.018906639888882637, 0.0075860824435949326, -0.019430292770266533, -0.0273264329880476, 0.017115194350481033, -0.03726206347346306, -0.004768000915646553, 0.0007626562146469951, 0.0012815725058317184, 0.018520789220929146, 0.016784464940428734, -0.011217203922569752, -0.008226868696510792, -0.0077583366073668, -0.02765716053545475, -0.011010498739778996, -0.01598520576953888, 0.007227793335914612, 0.03602183237671852, 0.03398234024643898, 0.04734928160905838, 0.007138221058994532, 0.009584233164787292, 0.019733460620045662, -0.003112636273726821, 0.02534206211566925, -0.009542891755700111, -0.0037069139070808887, -0.04398687556385994, -0.009157042019069195, 0.020450038835406303, 0.0016553644090890884, 0.01869993470609188, -0.003357237670570612, -0.002166959922760725, 0.0063492958433926105, 0.005891099106520414, -0.009770267643034458, -0.03442331403493881, -0.023123426362872124, -0.002203133422881365, 0.008502475917339325, -0.0030282316729426384, 0.012815725058317184, -0.017873112112283707, -0.018382985144853592, 0.018258962780237198, -0.028497762978076935, 0.007324255537241697, -0.00968069490045309, 0.009928741492331028, 0.006204602308571339, -0.014262661337852478, 0.004271908197551966, -0.0016803413163870573, -0.018810177221894264, 0.004320139531046152, -0.03307283669710159, 0.005515584722161293, 0.008213087916374207, 0.002892150776460767, 0.02531450055539608, 0.009618683718144894, 0.033486247062683105, -0.009418868459761143, -0.004047977738082409, 0.013263585977256298, -0.01562691666185856, -0.02596217766404152, -0.0123403025791049, -0.005078058689832687, -0.011541042476892471, -0.03803376480937004, -0.0010214684298262, 0.01632971316576004, -0.0004960925434716046, -0.016081668436527252, 0.007145110983401537, -0.020546501502394676, -0.025796813890337944, 0.013766569085419178, 0.016453737393021584, 0.020546501502394676, -0.01497923955321312, 0.029572630301117897, 0.0163434948772192, 0.01630215346813202, -0.012071586214005947, 0.02269623428583145, 0.005543145351111889, -0.0002859422529581934, 0.030895542353391647, 0.026527171954512596, -0.013580533675849438, -0.015241065993905067, 0.009997643530368805, -0.015420210547745228, -0.00617015128955245, -0.05603089928627014, 0.039191313087940216, 0.027918986976146698, 0.006934960838407278, -0.019113345071673393, -0.016205690801143646, -0.016081668436527252, -0.011120742186903954, 0.0011119019472971559, 0.010245689190924168, -0.013621875084936619, -0.012202499434351921, -0.021786732599139214, 0.04233323410153389, -0.0013487517135217786, 0.02469438500702381, -0.008254429325461388, -0.02129063941538334, -0.003827492007985711, 0.004327029455453157, 0.0008418931975029409, 0.010755562223494053, 0.002988613210618496, 0.04500662162899971, 0.004740440286695957, 0.007386267185211182, 0.026472050696611404, -0.010528186336159706, -0.001102427951991558, -0.0010274972300976515, -0.016894707456231117, 0.018727494403719902, -0.013814800418913364, -0.011795978993177414, 0.007386267185211182, 0.005002266727387905, 0.030564814805984497, -0.015447771176695824, -0.010231909342110157, -0.010865805670619011, -0.005257203243672848, 0.004606081638485193, 0.023440374061465263, -0.013463401235640049, -0.00651121512055397, 0.004599191714078188, 0.001989537850022316, 0.008619608357548714, -0.029241900891065598, 0.01602654531598091, 0.012064695358276367, -0.04999510571360588, -0.0022341390140354633, -0.0260035190731287, -0.016164349392056465, -0.005632717628031969, -0.007351816166192293, -0.012512557208538055, 0.007592972368001938, 0.014786315150558949, -0.022448189556598663, 0.014910337515175343, 0.019761020317673683, 0.0054949140176177025, -0.04059690982103348, 0.02499755285680294, -0.025548767298460007, 0.007841018959879875, 0.014097297564148903, -0.02695436216890812, -0.04566807672381401, -0.017845552414655685, -0.03194284811615944, 0.0016484742518514395, 0.01132744736969471, -0.02530072070658207, 0.001377173699438572, 0.007937480695545673, 0.00046034978004172444, -0.014248881489038467, -0.009336186572909355, 0.022076118737459183, -0.005777411628514528, -0.020160650834441185, 0.015241065993905067, 0.0016062719514593482, 0.025851935148239136, -0.03232869878411293, 0.0016493354924023151, 0.019802361726760864, -0.03621475771069527, -0.004657757934182882, -0.004120324272662401, 0.022434407845139503, -0.004151330329477787, 0.01180286891758442, 0.004771445877850056, 0.001251427922397852, -0.03191528841853142, -0.001260040677152574, 0.002187630394473672, -0.02466682530939579, -0.006366521120071411, 0.015048141591250896, -0.003930844832211733, 0.011878660880029202, -0.015778500586748123, -0.024115610867738724, 0.021263079717755318, -0.017211657017469406, -0.02937970496714115, 0.004792116582393646, -0.026913022622466087, 0.043187614530324936, 0.02932458370923996, 0.0006649018614552915, -0.00846802443265915, -0.007138221058994532, -0.045805878937244415, -4.69393162347842e-05, -0.03034432977437973, 0.010879585519433022, -0.019816141575574875, 0.013938822783529758, 0.005935885477811098, 0.000929312314838171, -0.020587841048836708, 0.022861599922180176, -0.004705989267677069, 0.012236949987709522, -0.017170315608382225, 0.01349785178899765, -0.010728001594543457, -0.022076118737459183, -0.04161665588617325, -0.005598267074674368, 0.018231401219964027, -0.0015020581195130944, 0.0043132491409778595, 0.0465775802731514, -0.013959493488073349, 0.01466229185461998, 0.02337147295475006, 0.004034197423607111, -0.0068316082470119, 0.009715146385133266, 0.01801091618835926, -0.03671085089445114, -0.024129390716552734, 0.011995794251561165, 0.01732189953327179, -0.018520789220929146, 0.010479955933988094, 0.008123516105115414, 0.010700440965592861, 0.00044700008584186435, -0.02164892852306366, -0.014524487778544426, 0.0013556418707594275, -0.0065973419696092606, 0.020822107791900635, 0.017817990854382515, -0.01805225759744644, 0.03141919523477554, 0.0313640758395195, 0.018162500113248825, -0.01830030418932438, -0.008922776207327843, -0.03456111624836922, 0.011561713181436062, 0.011093181557953358, -0.027105946093797684, 0.02363329939544201, -0.01597142405807972, 0.043849069625139236, -0.03803376480937004, 0.007014197763055563, -0.0003085506323259324, -0.0016321100993081927, -0.02937970496714115, 0.0232887901365757, 0.02094613015651703, -0.024156952276825905, 0.02133198082447052, 0.006015122402459383, 0.0242809746414423, -0.02100125141441822, -0.004361480474472046, 0.004633642267435789, -0.0232887901365757, -0.010934706777334213, 0.0077307759784162045, -0.01706007309257984, -0.02866312675178051, -0.028608005493879318, -0.004299468826502562, -0.005715399980545044, 0.0035794456489384174, 0.2008623629808426, -0.015585575252771378, 0.020257113501429558, 0.022765137255191803, 0.004688763990998268, 0.005849758163094521, 0.009191492572426796, 0.007014197763055563, 0.0007226070738397539, 0.018148720264434814, 0.0015649308916181326, -0.008123516105115414, -0.01996772550046444, -0.011065619997680187, 0.02470816671848297, 0.026720097288489342, -0.03558086231350899, -0.040817394852638245, 0.003100578673183918, 0.022089900448918343, -0.006287284195423126, -0.008261319249868393, -0.003796486184000969, -0.012278291396796703, 0.01963699795305729, 0.0128019442781806, -0.00574296060949564, 0.0032159890979528427, 0.03908107057213783, -0.006779931951314211, -0.03067505732178688, 0.005563816055655479, 0.005339885130524635, -0.006097804289311171, -0.03141919523477554, -0.0213733222335577, 0.029875796288251877, -0.0160127654671669, 0.006748925894498825, 0.014993020333349705, 0.019140904769301414, -0.01367699634283781, 0.024818409234285355, -0.015558014623820782, -0.011217203922569752, 0.012622799724340439, -0.004168555606156588, -0.01066599041223526, -0.0012161157792434096, -0.006135700270533562, -0.015130823478102684, -0.004554405342787504, 0.0051676309667527676, 0.014235100708901882, 0.013925042934715748, 0.0015339250676333904, 0.000868592644110322, -0.004895469173789024, 0.030785299837589264, 0.027216190472245216, -0.019237367436289787, 0.01431778259575367, -0.0026647751219570637, 0.01699117012321949, 0.004726659972220659, 0.005801526829600334, -0.02337147295475006, 0.00902612879872322, -0.0009577342425473034, 0.002225526375696063, -0.01368388719856739, -0.012037134729325771, -0.05374336242675781, -0.015489112585783005, -0.032190896570682526, -0.02029845491051674, 0.02796032838523388, 0.026816559955477715, 0.046550020575523376, 0.025548767298460007, 0.01661910116672516, -0.010259469971060753, 0.020133089274168015, 0.005295099224895239, -0.01533752866089344, -0.03299015760421753, 0.023757321760058403, -0.017211657017469406, 0.00782723817974329, -0.015254846774041653, -0.007592972368001938, -0.019595656543970108, -0.021745391190052032, -0.029793115332722664, 0.012044025585055351, -0.0020257113501429558, 0.024790847674012184, 0.009722036309540272, 0.002561422297731042, 0.007179562002420425, -0.021524906158447266, 0.04732171818614006, 0.045199546962976456, 0.00011530276242410764, 0.0030954109970480204, -0.033458687365055084, 0.012044025585055351, -0.008474914357066154, 0.0003839119162876159, -0.024184511974453926, -0.013112002052366734, -0.042167868465185165, 0.002034323988482356, -0.00018721896049100906, 0.0027732953894883394, 0.035553302615880966, -0.004547515418380499, -0.025769252330064774, 0.020215772092342377, 0.005705064628273249, -0.005594821646809578, -0.02630668692290783, -0.008082174696028233, -0.0005245145293883979, -0.019457852467894554, -0.0273264329880476, -0.024487679824233055, 0.010259469971060753, -0.007889250293374062, -0.04258127883076668, 0.032852351665496826, -0.021938316524028778, 0.024418778717517853, 0.018810177221894264, 0.015392649918794632, -0.028497762978076935, -0.0035518850199878216, -0.01871371455490589, 0.017942015081644058, 0.002299595857039094, -0.010459285229444504, 0.010590198449790478, 0.013043100945651531, -2.1975889467285015e-05, -0.003775815712288022, 0.008523145690560341, 0.002697503427043557, 0.01970589905977249, -0.0018052257364615798, -0.011106961406767368, 0.009122591465711594, -0.001748381764627993, 0.0009663469973020256, -0.013049990870058537, 0.023095864802598953, -0.007861689664423466, -0.015309968031942844, -0.017128974199295044, 0.007868579588830471, 0.01016989815980196, -0.03158456087112427, 0.0009172544814646244, 0.020546501502394676, -0.02429475635290146, -0.039880331605672836, -0.03469891846179962, -0.1756167709827423, 0.026913022622466087, 0.00950155034661293, -0.030399451032280922, 0.021924534812569618, 0.026926802471280098, 0.015558014623820782, 0.010817574337124825, -0.03593914955854416, -0.01831408403813839, 0.026113761588931084, -0.027588259428739548, 0.00233576912432909, -0.025066455826163292, -0.016894707456231117, -0.007613643072545528, -0.0019120234064757824, 0.0190582238137722, 0.030730178579688072, 0.0018569020321592689, 0.06107450649142265, -0.025094015523791313, 0.00948777049779892, -0.0019120234064757824, -0.006270058918744326, 0.004678428638726473, 0.011168972589075565, 0.016508858650922775, 0.008254429325461388, -0.05029827356338501, -0.01485521625727415, -0.017101412639021873, 0.001109318109229207, 0.0039342897944152355, -0.004234012216329575, 0.02333013154566288, 0.01218182872980833, -0.0007230376941151917, -0.04056934639811516, 0.02065674401819706, 0.006531885359436274, 0.016812026500701904, 0.006590452045202255, 0.012698591686785221, -0.023591957986354828, -0.005184856243431568, 0.012829504907131195, -0.01762506738305092, 0.023137206211686134, -0.012009574100375175, 0.010411053895950317, -0.023109646514058113, 0.017542384564876556, 0.005067723337560892, 0.02768472209572792, 0.010094106197357178, -0.006015122402459383, 0.007634313311427832, 0.00095859554130584, 0.004158220253884792, -0.022172581404447556, -0.0091639319434762, 0.011244764551520348, 0.010776232928037643, -0.004840347450226545, -0.03376185521483421, -0.006087469402700663, -0.012223170138895512, -0.02998604066669941, 0.010032094083726406, 0.0038653879892081022, -0.004488948732614517, -0.0132980365306139, -0.00392395444214344, 0.025714131072163582, 0.014924118295311928, 0.0015623470535501838, 0.00950155034661293, 0.008550706319510937, -0.01803847774863243, -0.003105746116489172, 0.02932458370923996, -0.025410963222384453, 0.010266359895467758, -0.011692626401782036, -0.023123426362872124, 0.0008410319569520652, 0.02765716053545475, -0.0014254049165174365, -0.005384671501815319, 0.015599355101585388, -0.03525013476610184, 0.0002374957111896947, -0.0003010145155712962, 0.00034170958679169416, -0.019871262833476067, 0.021786732599139214, 0.009425759315490723, 0.0017587171168997884, -0.013511632569134235, -0.01497923955321312, 0.008908995427191257, -0.018451888114213943, 0.010941597633063793, 0.039163753390312195, 0.011423909105360508, -0.008247539401054382, 0.0353328138589859, 0.024804629385471344, -0.0123403025791049, 0.022489529103040695, -0.016563979908823967, 0.018203841522336006, 0.009129481390118599, -0.008268209174275398, 0.001179081154987216, -0.016605321317911148, -0.008585157804191113, 0.028580443933606148, -0.007627423387020826, 0.04530978947877884, -0.0027164514176547527, -0.016495078802108765, -0.004788671154528856, -0.02662363462150097, -0.014965458773076534, -0.12104658782482147, -0.022792696952819824, 0.014868997037410736, 0.048176102340221405, -0.026788998395204544, 0.029820675030350685, -0.004819677211344242, 0.02633424662053585, -0.052806299179792404, 0.04200250282883644, -0.011217203922569752, -0.02370220050215721, 0.004895469173789024, 0.0006821273127570748, -0.008943446911871433, -0.004461388103663921, -0.004478613380342722, 0.00417200056836009, -0.006390636786818504, 0.038777902722358704, 0.0006476764101535082, -0.012877736240625381, 0.011864881031215191, -0.01802469603717327, -0.01930626854300499, -0.012760603800415993, -0.023812443017959595, 0.023826222866773605, 0.013435840606689453, -0.003954960033297539, 0.03687621280550957, -0.030123842880129814, 0.009060579352080822, -0.013118891976773739, -0.004358035512268543, -0.0019413067493587732, -0.00517452135682106, -0.0068626138381659985, 0.013787239789962769, -0.006066798698157072, 0.012815725058317184, 0.025755472481250763, 0.0015649308916181326, 0.004457943141460419, -0.028098132461309433, 0.003296948503702879, -0.010762453079223633, 0.01828652247786522, 0.006304509937763214, -0.02396402694284916, -0.0048127868212759495, -0.03293503448367119, -0.015806060284376144, 0.01064531970769167, -4.4490072468761355e-05, 0.0035518850199878216, 0.01765262708067894, -0.00533299520611763, -0.024225853383541107, -0.008116625249385834, 0.006125365383923054, 0.013539193198084831, -0.01861725188791752, 0.013601204380393028, 0.034781601279973984, 0.018190061673521996, -0.04139617085456848, -0.02762960083782673, -0.00043321974226273596, -0.016770685091614723, 0.004354590550065041, 0.004140994977205992, -0.011871770955622196, 0.028387518599629402, -0.03475404158234596, 0.007220902945846319, -0.017252996563911438, -0.01732189953327179, 0.0099907536059618, 0.013718337751924992, -0.012939748354256153, -0.0353328138589859, -0.009715146385133266, -0.0035277693532407284, -0.001001659082248807, -0.0011213759426027536, -0.004785226192325354, -0.022806478664278984, -0.0067833769135177135, -0.023481715470552444, -0.0011153470259159803, 0.016219470649957657, 0.02572791278362274, -0.004826567135751247, -0.010376603342592716, 0.014510707929730415, 0.0007329423096962273, -0.010879585519433022, 0.008123516105115414, 0.021400881931185722, -0.0160127654671669, 0.010411053895950317, -0.05302678421139717, 0.016825806349515915, -0.00288009294308722, -0.016508858650922775, 0.007999492809176445, -0.023275010287761688, -0.00233576912432909, 0.008860764093697071, -0.002254809718579054, 0.018837736919522285, -0.028070570901036263, 0.00010523664968786761, 0.0024649598635733128, 0.0056017120368778706, -0.038226690143346786, -0.018934199586510658, 0.028415080159902573, -0.00766876433044672, -0.007372486870735884, 0.010280140675604343, -0.0060461279936134815, 0.0008173469686880708, 0.02937970496714115, 0.0075309607200324535, -0.015365089289844036, -0.019940165802836418, -0.015558014623820782, 0.016922269016504288, 0.011403239332139492, 0.005894544534385204, 0.014007724821567535, -0.024735726416110992, -0.018451888114213943, 0.02268245443701744, -0.00764809362590313, -0.013153343461453915, 0.015034360811114311, 0.015117042697966099, 0.018906639888882637, 0.0032263242173939943, -0.03974252566695213, -0.05605845898389816, 0.0005262370686978102, 0.0038791683036834, -0.02962775155901909, -0.001843121717683971, 0.0062976195476949215, -0.019085783511400223, -0.01699117012321949, 8.801121293799952e-05, 0.00742071820423007, 0.01635727472603321, -0.0038895036559551954, -0.038529857993125916, -0.004395931493490934, 0.009136371314525604, 0.00665246369317174, -0.009398197755217552, 0.01150659192353487, -0.0025441970210522413, 0.03130895271897316, -0.0025803702883422375, 0.019885044544935226, -0.0035760006867349148, -0.005322659853845835, -0.008977897465229034, -0.01765262708067894, 0.007393157575279474, -0.0056017120368778706, -0.024777067825198174, 0.0059289950877428055, 0.005911769811064005, 0.00948777049779892, 0.013167123310267925, 0.022227702662348747, 0.0017759425099939108, 0.0010843412019312382, -0.029434826225042343, -0.003972185775637627, 0.024873530492186546, 0.012560788542032242, 0.010121666826307774, -0.012946638278663158, 0.006335515528917313, 0.004526844713836908, -4.823122071684338e-05, -0.010693551041185856, 0.03965984657406807, 0.007751446217298508, 0.008226868696510792, -0.007482729386538267, 0.026196444407105446, 0.02265489473938942, 0.012960418127477169, 0.008385342545807362, 0.020835887640714645, -0.005560371093451977, 0.017804211005568504, 0.016729343682527542, 0.007792787626385689, 0.022806478664278984, 0.015034360811114311, 0.0017320176120847464, -0.009887401014566422, -0.005157295614480972, 0.007854798808693886, 0.0037413646932691336, -0.02160758711397648, -0.022792696952819824, 0.029241900891065598, 0.028194595128297806, -0.013112002052366734, -0.009591123089194298, 0.016233250498771667, -0.028552884235978127, 0.03389965742826462, 0.014331563375890255, -0.017128974199295044, -0.03398234024643898, 0.024460120126605034, 0.01347718108445406, -0.00014781577920075506, 0.04065202921628952, -0.000954289163928479, 0.01168573647737503, 0.039466921240091324, 0.022778917104005814, -0.021428443491458893, 0.02561766840517521, 0.008929666131734848, -0.00932929664850235, -0.014235100708901882, -0.014069736935198307, 0.0019654224161058664, -0.022544650360941887, -0.02804301120340824, 0.016591539606451988, 0.001813838491216302, -0.006435423158109188, 0.07419340312480927, 0.0014004280092194676, -0.0265960730612278, -0.004258127883076668, -0.010204348713159561, 0.003751700045540929, 0.010734892450273037, -0.0036621277686208487, -0.0050126020796597, -0.016563979908823967, -0.014400464482605457, -0.005705064628273249, -0.009852949529886246, -0.0366557277739048, -0.003958405461162329, -0.0007419856847263873, 0.0010412776609882712, 0.005822197534143925, -0.006566336378455162, -0.013918153010308743, 0.007262243889272213, -0.005019492004066706, 0.03825424984097481, 0.027753623202443123, 0.0014615783002227545, -0.01218182872980833, 0.0011041504330933094, 0.00378959602676332, 0.011031169444322586, -0.039522040635347366, 0.015764718875288963, -0.002218636218458414, -0.04434516280889511, -0.032135773450136185, 0.0008001215173862875, 0.001843121717683971, 0.028525322675704956, 0.007138221058994532, -0.007338035851716995, -0.008798752911388874, 0.009728926233947277, 0.035553302615880966, -0.0042615728452801704, -0.028070570901036263, -0.004909249488264322, -0.0014331563143059611, -0.019209805876016617, -0.032163336873054504, -0.015392649918794632], "81235794-ec77-4d94-8978-139c2c19d5d8": [-0.004722264129668474, 0.016102604568004608, 0.03999046981334686, -0.019463147968053818, 0.0120909558609128, 0.01677471399307251, 0.01370121631771326, -0.009927606210112572, -0.03850622847676277, -0.023299768567085266, 0.016032593324780464, 0.03716201335191727, -0.0021143420599400997, 0.02985282987356186, -0.01907108537852764, -0.0009267749264836311, 0.02150747925043106, 0.015416493639349937, -0.0012111959513276815, -0.01909909024834633, -0.015570518560707569, 0.001439607935026288, -0.021563488990068436, -0.011292827315628529, -0.013484181836247444, -0.0006125991349108517, 0.01629863679409027, -0.023677831515669823, -0.008135315962135792, -0.010354675352573395, 0.009227492846548557, -0.00592645863071084, 0.0028652134351432323, 0.0012680802028626204, -0.009920604526996613, 0.009780582040548325, -0.0008786421385593712, -0.02751445211470127, 0.006332524586468935, 0.004771271720528603, 0.035453736782073975, -0.012027946300804615, -0.004750268533825874, -0.008107312023639679, -0.010683728381991386, 0.004001147113740444, -0.007792260497808456, -0.018553001806139946, -0.009290503337979317, 0.02335577830672264, 0.025736164301633835, 0.010256659239530563, -0.008135315962135792, -0.003362294053658843, -0.031533099710941315, -0.009220492094755173, -0.02787850983440876, 0.01249002106487751, -0.008282340131700039, -0.033017341047525406, 0.004389710258692503, 0.011635882779955864, -0.02384585700929165, 0.01991122215986252, -0.003385047661140561, -0.009339511394500732, 0.008142317645251751, 0.006339525803923607, 0.010949771851301193, -0.026772331446409225, 0.022529644891619682, 0.01919710636138916, -0.009206489659845829, -0.0008550133206881583, 0.024251922965049744, -0.01325314398854971, -0.019855212420225143, -0.01006762869656086, 0.002852961653843522, -0.011957934126257896, 0.015808558091521263, -0.02843860164284706, -0.0006839231355115771, 0.0013722219737246633, 0.009738575667142868, -0.0056849196553230286, -0.01155886985361576, 0.021703511476516724, -0.022123578935861588, 0.0027724485844373703, 0.02301972359418869, 0.014324317686259747, 0.0262682493776083, -0.017880892381072044, -0.017880892381072044, -0.0017555339727550745, -0.008443365804851055, 0.019855212420225143, -0.019463147968053818, -0.017754873260855675, -0.020751357078552246, -0.004064157605171204, -0.014142287895083427, -0.01701275259256363, -0.010739737190306187, -0.011362838558852673, -0.01382023561745882, 0.0012409507762640715, 0.01168489083647728, 0.00816332083195448, 0.004939299076795578, 0.02486802265048027, -0.011320831254124641, -0.02960078977048397, 0.009073467925190926, 0.0006852358346804976, 0.022123578935861588, -0.0176988635212183, -0.01382723730057478, -0.004032652359455824, -0.0011516863014549017, -0.004365206230431795, 0.05040815472602844, -0.007137654814869165, 0.04545135423541069, -0.0013494683662429452, 0.0005592154921032488, -0.0305529423058033, -0.012118960730731487, -0.012483019381761551, -0.0004520106303971261, 0.016046596691012383, 0.001033542212098837, -0.0030945006292313337, -0.010515701025724411, 0.0008795172907412052, 0.015346482396125793, -0.005432879086583853, -0.0200092364102602, -0.025176072493195534, 0.02314574457705021, 0.00691011780872941, -0.0142333023250103, -0.011376840993762016, -0.010606716386973858, 0.04295894876122475, -0.018665019422769547, 0.028424598276615143, -0.005726926494389772, 0.0009416523389518261, -0.01468837633728981, -0.03643389418721199, -0.02800453081727028, 0.01583656296133995, 0.009969612583518028, 0.018819045275449753, -0.010690729133784771, 0.04648752138018608, -0.0015568769304081798, -0.01364520750939846, 0.0003986269875895232, 0.012244980782270432, -0.027472443878650665, 0.017390813678503036, 0.00494630029425025, 0.014492345042526722, 0.013386165723204613, 0.008128315210342407, -0.005408375058323145, -0.01631263829767704, 0.006542558316141367, 0.027822501957416534, -0.025764167308807373, 0.020961390808224678, 0.03296133130788803, 0.00017929462774191052, 0.007372192572802305, -0.008751415647566319, -0.0157245434820652, -0.01757284253835678, -0.010900763794779778, 0.0076522380113601685, 0.012616041116416454, 0.010256659239530563, 0.0156125258654356, 0.003976643551141024, 0.04060656949877739, -0.010886761359870434, -0.03136507421731949, 0.0005495889345183969, 0.001021290197968483, 0.019813206046819687, -0.005072320811450481, -0.006714086048305035, -0.6107227802276611, -0.01439432892948389, 0.01307811588048935, -0.015640530735254288, -0.009122475981712341, 0.022039566189050674, 0.00491829589009285, -0.012987101450562477, -0.026170233264565468, 0.03343740850687027, -0.00988559890538454, 0.00021364394342526793, -0.004442218691110611, -0.00047257644473575056, -0.024910030886530876, -0.031281061470508575, -0.019939225167036057, 0.005922958254814148, -0.003355292836204171, 0.003442806890234351, -0.01313412468880415, 0.010739737190306187, -0.027318419888615608, 0.031141037121415138, -0.0077852592803537846, 0.006287016905844212, 0.007680242415517569, -0.018945064395666122, 0.02810254693031311, -0.01863701455295086, -0.031057024374604225, -0.00047607702435925603, 0.02558213844895363, -0.014562356285750866, 0.0437430776655674, -0.023089734837412834, -0.015304476022720337, 0.0311130341142416, 0.016816720366477966, 0.06413037329912186, -0.01699874922633171, -0.018468987196683884, 0.020317286252975464, 0.0016198870725929737, -0.007911279797554016, 0.00965456198900938, -0.006871611811220646, -0.006196002475917339, 0.00143085652962327, -0.012139963917434216, 0.006829604972153902, -2.7023415896110237e-06, -0.020653340965509415, -0.005054818000644445, 0.012686052359640598, -0.014380326494574547, 0.02013525739312172, -0.01690073497593403, 0.0017879141960293055, -0.00931850727647543, -0.00976657960563898, 0.0008856432978063822, -0.013302152045071125, -0.017740869894623756, -0.03632187470793724, 0.006455044262111187, -0.002028578193858266, -0.018426980823278427, 0.008345349691808224, 9.960205352399498e-05, 0.013050111010670662, -0.007603229954838753, 0.024447955191135406, -0.026394270360469818, -0.0013144626282155514, 0.037190016359090805, 0.022837694734334946, -0.00821932964026928, 0.0008274463471025229, 0.015528512187302113, -0.006262513343244791, -0.01284007728099823, -0.005023312754929066, 0.006203003693372011, -0.014268307946622372, 0.008856432512402534, -0.030384914949536324, 0.04682357609272003, -0.008569386787712574, -0.005530894733965397, 0.010557708330452442, 0.019057083874940872, -0.012931091710925102, -0.04536733776330948, -0.010893762111663818, 0.033381398767232895, -0.013323155231773853, 0.0018185442313551903, 0.009171484038233757, -0.03447357565164566, 0.00017054322233889252, -0.02349580079317093, 0.00798829272389412, -0.0091854864731431, 0.010445689782500267, 0.009038462303578854, -0.018707025796175003, 0.020737355574965477, 0.02023327350616455, -0.02245963364839554, -0.004785274155437946, -0.008814426138997078, -0.015486505813896656, -0.006038476713001728, 0.009381517767906189, -0.018693024292588234, 0.008422362618148327, 0.008114312775433064, 0.010158643126487732, -0.0017774126026779413, 0.016270631924271584, -0.01711076870560646, 0.014023268595337868, -0.0018465487519279122, -0.00977358128875494, -0.0005819691577926278, 0.011292827315628529, 0.016256630420684814, -0.019015075638890266, -0.01965918019413948, 0.004449219908565283, 0.003013987559825182, 0.032681286334991455, -0.02799052745103836, 0.0155565170571208, 0.012307991273701191, 0.001536748604848981, 0.005306858569383621, -0.01232899446040392, -0.023691833019256592, -0.014436335302889347, -0.0002638551814015955, 0.005831943359225988, -0.007337186951190233, -0.009059465490281582, -0.011012781411409378, -0.00879342295229435, 0.015514509752392769, 0.01382723730057478, -0.01128582563251257, -0.0013389666564762592, -0.013869243673980236, -0.0175868459045887, -0.029236730188131332, 0.008352351374924183, -0.004837782587856054, 0.00798829272389412, -0.041810765862464905, -0.014996426180005074, -0.03293332830071449, 0.012055950239300728, 0.0035460737999528646, -0.014730382710695267, 0.014702378772199154, -0.02577817067503929, -0.010515701025724411, -0.005264851730316877, 0.005387371405959129, -0.0141772935166955, -0.024489961564540863, 0.010165644809603691, -0.031141037121415138, 0.0002907657762989402, 0.0282425694167614, -0.0011201811721548438, 0.02222159504890442, -0.018132934346795082, -0.005744429305195808, -0.022025562822818756, 0.0015857565449550748, 0.015010428614914417, -0.008800423704087734, -0.02717839740216732, -0.014226301573216915, 0.04752368852496147, 0.01105478871613741, 0.020527321845293045, 0.0019375634146854281, -0.01531847845762968, 0.024251922965049744, 0.014590360224246979, 0.020303284749388695, -0.02278168499469757, 0.014464340172708035, -0.030468929558992386, 0.0013827236834913492, 0.03340940549969673, -0.01930912397801876, 0.0134141705930233, 0.02300572209060192, 0.018538998439908028, 0.013547191396355629, -0.000701426004525274, 0.001916560111567378, 0.017866890877485275, -0.023761844262480736, 0.009339511394500732, -0.04323899373412132, -0.001471112947911024, 0.011173808015882969, 0.009325508959591389, -0.008639398030936718, -0.023341776803135872, -0.04080260172486305, 0.001466737245209515, 0.044695232063531876, -0.009213490411639214, 0.008107312023639679, 0.009906603023409843, 0.019715189933776855, -0.01052270270884037, -0.007596228737384081, 0.012041947804391384, 0.01736280880868435, -0.011320831254124641, -0.0015743797412142158, 0.006605568807572126, 0.029208725318312645, 0.030860992148518562, -0.012525026686489582, -0.01522046234458685, 0.023411788046360016, 0.02080736681818962, 0.017418818548321724, -0.003882128046825528, 0.013029107823967934, 0.024685993790626526, 0.0028214564081281424, 0.03971042484045029, -0.007708246819674969, 0.030020857229828835, 0.005166836082935333, -0.004809778183698654, -0.024125903844833374, 0.0009267749264836311, -0.011649884283542633, 0.02405589260160923, 0.03007686510682106, 0.005110826808959246, -0.011362838558852673, 0.013337157666683197, 0.0028249570168554783, -0.010165644809603691, 0.011075791902840137, -0.006994131486862898, -0.01956116408109665, -0.0017380311619490385, -0.00015282159438356757, 0.029572784900665283, 0.041922781616449356, 0.018707025796175003, -0.00497430469840765, 0.03738604858517647, -0.007144656032323837, 0.02118542790412903, -0.02023327350616455, 0.007855270989239216, -0.010585712268948555, -0.016452662646770477, -0.010515701025724411, -0.033017341047525406, -0.026660313829779625, 0.014107282273471355, -0.030720969662070274, -0.020555324852466583, 0.01631263829767704, 0.005404874216765165, 0.012672049924731255, 0.011439850553870201, 0.02534409984946251, -0.022417627274990082, -0.022585654631257057, 0.027388431131839752, 0.028018532320857048, 0.01040368340909481, -0.007624233607202768, -0.03690997138619423, 0.0074772099032998085, -0.004928797483444214, -0.009038462303578854, -0.026534292846918106, -0.010347673669457436, -0.012244980782270432, -0.01929512247443199, -0.014506346546113491, -0.01393925491720438, 0.025974202901124954, -0.007043139543384314, 0.008149318397045135, 0.009976614266633987, 0.0015726294368505478, -0.006143494043499231, -0.015598523430526257, -0.0037701099645346403, 0.04430316761136055, 0.0077852592803537846, -0.003407801268622279, -0.025484122335910797, -0.011243819259107113, -0.014898410066962242, 0.038338202983140945, -0.0038261190056800842, 0.00947953388094902, 0.0067560928873717785, 0.025302093476057053, -0.0008917692466638982, 0.019841209053993225, -0.0026359264738857746, 0.01632664166390896, -0.0011123049771413207, 0.00022819316654931754, -0.0035163189750164747, -0.0016163864638656378, -0.0008029423770494759, 0.011845916509628296, 0.030692964792251587, -0.01597658544778824, 0.017964906990528107, -0.011635882779955864, -0.004102663602679968, -0.008009295910596848, 0.014954419806599617, 0.006752592511475086, 0.01814693585038185, -0.01908508688211441, -0.021339451894164085, 0.015052434988319874, 0.014758387580513954, 0.022067569196224213, 0.008863434195518494, 0.023187750950455666, -0.019365133717656136, -0.012882083654403687, 0.02254364639520645, 0.014212299138307571, -0.004151671659201384, 0.04819579795002937, 0.02904069796204567, 0.0032047685235738754, 0.0035635766107589006, 0.02520407736301422, 0.020681345835328102, 0.014730382710695267, -0.03377346321940422, -0.006041977554559708, 0.039374370127916336, 0.003346541430801153, 0.0072531732730567455, 0.010571710765361786, 0.03377346321940422, 0.025960199534893036, 0.007589227985590696, 0.02244563214480877, -0.004368706606328487, 0.01991122215986252, 0.017530836164951324, 0.011215814389288425, -0.0002446020662318915, -0.005555398762226105, -0.02566615305840969, 0.014772390015423298, 0.025652149692177773, -0.022249599918723106, -0.016690699383616447, 0.010977775789797306, -0.008954448625445366, -0.039374370127916336, -0.031141037121415138, -0.016508670523762703, -0.013757226057350636, -0.012623041868209839, -0.01607459969818592, -0.004872788209468126, -0.017992909997701645, -0.0219835564494133, -0.008457368239760399, 0.013792231678962708, -0.00926249846816063, -0.025288091972470284, -0.014646369963884354, -0.014303313568234444, 0.008128315210342407, -0.009640559554100037, -0.016452662646770477, -0.016816720366477966, -0.03265328332781792, -0.036825958639383316, 0.002021576976403594, 0.02834058552980423, 0.02289370447397232, 0.008772418834269047, 0.005023312754929066, -0.02314574457705021, 0.023747842758893967, -0.015458500944077969, -0.013435173779726028, -0.020737355574965477, -0.00988559890538454, 0.008303343318402767, 0.0037876127753406763, 0.0023016224149614573, -0.011061789467930794, -0.0021913545206189156, -0.002042580395936966, 0.026884349063038826, -0.013323155231773853, -0.02048531360924244, 0.008660401217639446, 0.02059733308851719, 0.004911294672638178, 0.006896115839481354, 0.013911250978708267, 0.026772331446409225, -0.03576178476214409, 0.01571054197847843, -0.0005027688457630575, -0.005495889112353325, -0.035817794501781464, -0.006146994419395924, -0.007610231172293425, 0.008373354561626911, 0.0005150208016857505, 0.005800438579171896, 0.009864595718681812, 0.018006913363933563, -0.02797652594745159, 0.00518083805218339, 0.016578681766986847, 0.012525026686489582, 0.023915868252515793, 0.015234464779496193, 0.015878569334745407, 0.012693053111433983, -0.017768874764442444, -0.005331362597644329, -0.005128329619765282, 0.01317613199353218, -0.030860992148518562, -0.0047957757487893105, 0.02741643600165844, 0.01930912397801876, -0.016606686636805534, -0.03066496178507805, 0.0142333023250103, -0.0022946211975067854, 0.016172615811228752, -0.011992940679192543, -0.028270574286580086, -0.018567003309726715, -0.004085160791873932, -0.0022928710095584393, 0.01816093735396862, -0.006612569559365511, -0.012518025003373623, -0.020891379565000534, 0.016578681766986847, 0.005856447387486696, -0.038114167749881744, 0.03125305473804474, -0.0304409246891737, -0.021311447024345398, 0.02129744552075863, 0.00943752657622099, 0.015066437423229218, 0.019967230036854744, -0.0001565409475006163, -0.008982453495264053, -0.008009295910596848, -0.01631263829767704, -0.0031855152919888496, -0.01690073497593403, 0.006280016154050827, 0.034277547150850296, 0.036601919680833817, 0.03184115141630173, 0.013778229244053364, 0.009864595718681812, 0.02498004212975502, 0.00497430469840765, 0.010858756490051746, -0.006441041827201843, -0.012048949487507343, -0.024321934208273888, -0.004288193769752979, 0.018020914867520332, 0.009234493598341942, 0.02257165126502514, 0.00676309410482645, 0.03041291981935501, 0.023859860375523567, 0.0113838417455554, -0.02982482500374317, -0.03192516416311264, -0.009521540254354477, 0.009976614266633987, 0.010438689030706882, -0.010739737190306187, 0.01631263829767704, -0.015640530735254288, -0.015654532238841057, 0.00959855318069458, -0.009920604526996613, 0.008982453495264053, -0.016382649540901184, 0.005177337676286697, 0.007491211872547865, -0.015640530735254288, -0.00485528539866209, -0.006238009314984083, -0.021801527589559555, -0.01908508688211441, -0.019785201177001, 0.0017214034451171756, -0.004186677280813456, 0.006157496012747288, 0.025512127205729485, 0.009794584475457668, 0.03041291981935501, -0.02384585700929165, 0.009619556367397308, -0.012980099767446518, -0.020051244646310806, -0.00908046867698431, -0.016256630420684814, -0.008002294227480888, -0.001402852009050548, -0.03310135379433632, -0.0012251982698217034, 0.0007583101978525519, -0.0014474841300398111, -0.022879701107740402, 0.008352351374924183, -0.009703570045530796, -0.029320742934942245, 0.011810910888016224, 0.020317286252975464, 0.032317228615283966, -0.006213505286723375, 0.023803850635886192, -0.010235656052827835, 0.012300990521907806, -0.009675565175712109, 0.003320287214592099, 0.003983644302934408, 0.007239171303808689, 0.03321337327361107, 0.014520348981022835, -0.017894895747303963, -0.025652149692177773, 0.0006366654997691512, -0.012146965600550175, -0.006287016905844212, -0.05642912909388542, 0.03455759212374687, 0.03847822546958923, 0.0010396682191640139, -0.029544780030846596, -0.017852887511253357, -0.017096765339374542, 0.012917090207338333, 0.010270661674439907, -0.0009416523389518261, 0.004102663602679968, -0.007841268554329872, -0.023915868252515793, 0.06340225785970688, -0.0007097398047335446, 0.021675506606698036, -0.007463207468390465, -0.033129360526800156, -0.011754902079701424, -0.0016715204110369086, 0.010312668047845364, 0.03769409656524658, 0.0006331649492494762, 0.05976166948676109, 0.0008029423770494759, 0.018679022789001465, 0.023747842758893967, -0.012069952674210072, -0.002058333018794656, 0.004116666037589312, -0.020989395678043365, 0.028606627136468887, -0.015528512187302113, 0.0032240215223282576, 0.01468837633728981, 0.008114312775433064, 0.02855061925947666, -0.017782876268029213, -0.014366324059665203, -0.027318419888615608, -0.012525026686489582, 0.014996426180005074, 0.02786450833082199, -0.004561237990856171, -0.017418818548321724, 0.0015752548351883888, 0.0018062922172248363, 0.01676071248948574, -0.0113278329372406, 0.012349997647106647, 0.00673508970066905, -0.052116431295871735, -0.0074772099032998085, -0.0141212847083807, 0.006896115839481354, 0.02797652594745159, 0.0013573445612564683, -0.021339451894164085, 0.006125991232693195, 0.025960199534893036, -0.020051244646310806, -0.002116092247888446, 0.009388518519699574, 0.004732765723019838, -0.04116665944457054, 0.026226243004202843, -0.018805041909217834, 0.0032345233485102654, 0.015024431049823761, -0.029096707701683044, -0.039374370127916336, 0.000732055923435837, -0.019393136724829674, 0.015920575708150864, 0.008485373109579086, -0.014436335302889347, 0.011005780659615993, 0.0005981592694297433, 0.004207680933177471, -0.015990586951375008, 0.0012164467480033636, -0.0016225124709308147, -0.0022246099542826414, -0.02266966737806797, 0.03293332830071449, 0.0098365917801857, 0.015696538612246513, -0.03343740850687027, -0.002513406565412879, 0.011894924566149712, -0.03424954041838646, -0.007407198194414377, 0.008898439817130566, 0.018763035535812378, -0.012973099015653133, -0.001543749705888331, 0.01173389796167612, -0.012104958295822144, -0.0268283411860466, 0.021899543702602386, 0.014128285460174084, -0.021605495363473892, 0.010942770168185234, -0.008226331323385239, -0.003917133901268244, 0.011551869101822376, -0.021815529093146324, -0.028956685215234756, 0.007039638701826334, -0.018244951963424683, -0.018216947093605995, -0.004582241177558899, -0.01173389796167612, 0.03368945047259331, 0.039374370127916336, -0.0061014872044324875, -0.007813263684511185, -0.003425304079428315, -0.035677772015333176, -0.02048531360924244, -0.02937675267457962, -9.621087519917637e-05, -0.010480695404112339, 0.00589845422655344, 0.021675506606698036, 0.007092147599905729, -0.020849373191595078, 0.030973011627793312, -0.0072531732730567455, 0.003469061339274049, -0.011257821694016457, 0.00688211340457201, 0.009017459116876125, -0.008485373109579086, -0.04511529952287674, 0.009353512898087502, 0.02441995032131672, -0.000754809589125216, 0.028256570920348167, 0.03721801936626434, -0.015066437423229218, -0.0003903131582774222, 0.013029107823967934, 0.031141037121415138, -0.006150495260953903, 0.009934606961905956, 0.01632664166390896, -0.04578740894794464, -0.0035828296095132828, 0.01045969221740961, 0.02416791021823883, -0.017292797565460205, 0.0041061644442379475, 0.010599714703857899, 0.020303284749388695, -0.0078622717410326, -0.013421171344816685, 0.000494454987347126, 0.013904249295592308, -0.01747482642531395, 0.029012693092226982, 0.03206518664956093, -0.0072531732730567455, 0.04315498098731041, 0.021367456763982773, 0.015514509752392769, -0.015584520995616913, -0.025120064616203308, -0.04004647955298424, 0.011075791902840137, 0.015500507317483425, -0.0220955740660429, 0.008401359431445599, -0.01895906776189804, 0.03842221572995186, -0.027458442375063896, -0.0031872657127678394, -0.005593904759734869, -0.0008799548377282917, -0.02012125588953495, 0.011810910888016224, 0.013953257352113724, -0.03063695691525936, 0.034977659583091736, -0.006283516529947519, 0.020443307235836983, -0.013715218752622604, -2.4927861886681058e-05, 0.009066467173397541, -0.020849373191595078, -0.0056219096295535564, -0.0010983026586472988, -0.012048949487507343, -0.01816093735396862, -0.018693024292588234, -0.0011989439371973276, -0.012300990521907806, 0.02926473505795002, 0.1898707151412964, -0.015472503378987312, 0.004571739584207535, 0.011642883531749249, -0.011761902831494808, -0.008681404404342175, 0.007666240446269512, 0.008898439817130566, -0.00408166041597724, 0.01953315921127796, -0.0004327575152274221, -0.009640559554100037, -0.009752578102052212, -0.009178484790027142, 0.02303372696042061, 0.029404757544398308, -0.038702260702848434, -0.02107340842485428, 0.0037141009233891964, 0.016606686636805534, 0.0004555111809168011, -0.010970775038003922, -0.01167788915336132, -0.009178484790027142, 0.031309064477682114, -0.004522731527686119, 0.0032835311722010374, -0.0045682392083108425, 0.032905325293540955, -0.005432879086583853, -0.02855061925947666, 0.006983629893511534, 0.008359352126717567, -0.015542514622211456, -0.018426980823278427, -0.009430525824427605, 0.0178108811378479, -0.011551869101822376, 0.015024431049823761, 0.0072881788946688175, 0.012917090207338333, -0.016228625550866127, 0.01608860306441784, -0.008688405156135559, -0.017628852277994156, 0.003020988777279854, 0.005243848543614149, -0.004403712227940559, 0.015500507317483425, -0.012819074094295502, -0.02740243263542652, -0.0018693024758249521, -0.014366324059665203, 0.01036167610436678, 0.004039653576910496, 0.010592713952064514, 0.0017502831760793924, 0.004165674094110727, 0.017754873260855675, 0.04592743143439293, -0.007204165682196617, 0.014184295199811459, -0.0036650928668677807, 0.022123578935861588, -0.021381458267569542, 0.019463147968053818, -0.027094382792711258, 0.012027946300804615, -0.00494630029425025, -0.010529703460633755, -0.024335937574505806, -0.003364044241607189, -0.041810765862464905, -0.0012488270876929164, -0.039626412093639374, -0.011950933374464512, 0.02764047123491764, 0.030608952045440674, 0.033269383013248444, 0.022613657638430595, 0.014492345042526722, -0.003920634277164936, 0.007757254876196384, 0.013008104637265205, -0.02670232020318508, -0.02982482500374317, 0.010228654369711876, -0.0062940181232988834, 0.0009451528894715011, -0.01629863679409027, -0.006322022993117571, -0.01531847845762968, -0.026632308959960938, -0.0314490869641304, 0.0035653267987072468, -0.014520348981022835, 0.020163262262940407, 0.029684802517294884, -0.0176988635212183, -0.0016785215120762587, -0.020499316975474358, 0.06026574969291687, 0.04889591038227081, 0.005660415627062321, 0.0192251093685627, -0.04438718035817146, 0.009171484038233757, -0.007736251689493656, 0.006696583237498999, -0.024728000164031982, -0.013568195514380932, -0.04223083332180977, 0.0135261882096529, 0.0020705850329250097, 0.00902445986866951, 0.02094738930463791, -0.002837209030985832, -0.003414802486076951, 2.0155604943283834e-05, -0.0040711588226258755, -0.0009556545992381871, -0.03324137628078461, 0.0006891739903949201, 0.008933445438742638, -0.02173151634633541, -0.01105478871613741, -0.01289608608931303, 0.009402520954608917, -0.010767742060124874, -0.028844665735960007, 0.03640589118003845, -0.033605437725782394, 0.01849699206650257, 0.006934621836990118, 0.015150451101362705, -0.02118542790412903, -0.023425789549946785, -0.03310135379433632, 0.021815529093146324, 0.021591493859887123, -0.0057024224661290646, -0.000240445151575841, 0.023397784680128098, -0.004547235555946827, -0.011628881096839905, 0.006836606189608574, -0.003812116803601384, 0.015934577211737633, -0.0013783479807898402, -0.005373369436711073, 0.0045507363975048065, 0.0022316109389066696, -0.011824913322925568, -0.010081631131470203, 0.020779361948370934, -0.021143421530723572, -0.03240124136209488, -0.016830723732709885, 0.012707055546343327, 0.008387356996536255, -0.04676756635308266, 0.013218138366937637, 0.018945064395666122, -0.01284007728099823, -0.023103738203644753, -0.028844665735960007, -0.178556889295578, 0.01463236752897501, 0.013344158418476582, -0.020079247653484344, -0.002063583815470338, 0.023803850635886192, 0.017628852277994156, 0.014100281521677971, -0.02082136832177639, -0.03223321586847305, 0.024545971304178238, -0.02117142453789711, 0.0021878539118915796, -0.04063457250595093, -0.008933445438742638, -0.008086307905614376, -0.008016296662390232, 0.029292739927768707, 0.0261562317609787, 0.02451796643435955, 0.05435679480433464, -0.018454985693097115, 0.026450278237462044, -0.0001969068543985486, -0.006318522151559591, -0.005124829243868589, 0.0011726897209882736, 0.01725079119205475, 0.012924090959131718, -0.03041291981935501, -0.00971057079732418, -0.00804430153220892, -0.0002406639396212995, 0.011026783846318722, 0.0023628822527825832, 0.00691011780872941, 0.0016548926942050457, -0.0219835564494133, -0.033493418246507645, 0.024251922965049744, 0.009451529011130333, 0.016144612804055214, -0.006437541451305151, 0.005432879086583853, -0.029936842620372772, 0.013113121502101421, 0.003976643551141024, -0.017390813678503036, 0.008646398782730103, -0.006654576398432255, 0.0030980012379586697, -0.018454985693097115, 0.014254306443035603, 0.0026831841096282005, 0.007470208685845137, 0.0018220447236672044, -0.011824913322925568, 0.0028004529885947704, -0.003899630857631564, 0.014366324059665203, -0.012630043551325798, -0.007526217494159937, 0.022389622405171394, -0.006896115839481354, -0.01242701057344675, -0.041474711149930954, -0.0016303887823596597, 0.008772418834269047, -0.038926295936107635, 0.002443395322188735, -0.003346541430801153, -0.0067035844549536705, -0.01607459969818592, -0.01711076870560646, 0.019617173820734024, 0.03791813552379608, 0.0036895968951284885, 0.0021966053172945976, 0.0047082616947591305, -0.004491226747632027, 0.010725735686719418, 0.03248525410890579, -0.02464398741722107, 0.011145803146064281, -0.019855212420225143, -0.007603229954838753, 0.011439850553870201, 0.026310255751013756, -0.007351189386099577, -0.011929930187761784, 0.01394625660032034, -0.023789849132299423, 0.021661505103111267, -0.0027811999898403883, 0.014730382710695267, -0.011943932622671127, 0.023453794419765472, 0.0041061644442379475, 0.008086307905614376, 0.014331318438053131, -0.025064054876565933, -0.004564738366752863, -0.021577490493655205, 0.009444528259336948, 0.03775010630488396, 0.0022788685746490955, -0.0074772099032998085, 0.027598464861512184, 0.013274147175252438, -0.03738604858517647, 0.010900763794779778, -0.03458559513092041, 0.009787583723664284, -0.0005110827041789889, -0.015640530735254288, -0.013008104637265205, -0.008191324770450592, -0.00401864992454648, 0.021577490493655205, -0.0134701794013381, 0.05458083003759384, -0.007918281480669975, -0.016732707619667053, -0.005408375058323145, -0.038926295936107635, -0.012511024251580238, -0.123555988073349, -0.02278168499469757, 0.013050111010670662, 0.03738604858517647, -0.010165644809603691, 0.028046537190675735, -0.010172645561397076, 0.03354942798614502, -0.036825958639383316, 0.06004171445965767, -0.028424598276615143, -0.0183709729462862, 0.0009215240716002882, 0.011698892340064049, -0.007673241198062897, -0.00595796387642622, 0.004365206230431795, 0.0067735956981778145, 0.004074659198522568, 0.053376633673906326, -0.002599170431494713, -0.01128582563251257, 0.006290517747402191, -0.02971280738711357, -0.024111900478601456, -0.016928737983107567, -0.032905325293540955, 0.009752578102052212, -0.00022556773910764605, -0.001505243475548923, 0.04357504844665527, -0.03125305473804474, 0.016816720366477966, -0.006290517747402191, 0.0012173219583928585, -0.006080483552068472, -0.026184236630797386, -0.012847078032791615, -0.0018605509540066123, -1.906167744891718e-05, -0.0048132785595953465, 0.01884704828262329, 0.011033784598112106, 0.00396264111623168, -0.02800453081727028, 0.015514509752392769, -0.02140946313738823, 0.029320742934942245, 0.0016645193099975586, -0.021241435781121254, 0.0003093625418841839, -0.015892570838332176, -0.011236817575991154, -0.0017572842771187425, 0.009003456681966782, 0.0050828224048018456, 0.021017400547862053, -0.003955639898777008, -0.011096795089542866, -0.010466692969202995, -0.004519231151789427, 0.009871597401797771, -0.021787524223327637, 0.01851099543273449, 0.025050053372979164, -0.007757254876196384, -0.04223083332180977, -0.03307335078716278, -0.0004377895675133914, -0.0018938063876703382, -0.008534381166100502, 0.0071306535974144936, -0.010655723512172699, 0.030832987278699875, -0.021885540336370468, 0.009808586910367012, -0.011362838558852673, -0.014261307194828987, -0.011810910888016224, 0.011453852988779545, -0.028956685215234756, -0.02531609497964382, -0.00803729984909296, -0.007771257311105728, 0.0006677330238744617, 0.000988909974694252, -0.009234493598341942, -0.03217720612883568, -0.002375134266912937, -0.018889056518673897, 0.0008860808447934687, 0.012195972725749016, 0.00297898193821311, -0.015668535605072975, -0.01744682341814041, 0.011068791151046753, 0.0062415096908807755, -0.011068791151046753, 0.020513318479061127, 0.012630043551325798, -0.02625424787402153, 0.014436335302889347, -0.04183876886963844, 0.021031402051448822, -0.009332509711384773, -0.008296342566609383, -0.005016311537474394, -0.0057549308985471725, 0.015528512187302113, -0.0031067526433616877, -0.0051003252156078815, 0.01179690845310688, -0.01487040612846613, -0.007484210655093193, -0.018300959840416908, -0.025036050006747246, -0.034977659583091736, -0.016452662646770477, 0.00694162305444479, -0.00685410900041461, 0.0046732560731470585, 0.012966097332537174, -0.012006942182779312, -0.0008593890233896673, 0.023649826645851135, -7.312902016565204e-05, -0.004484225530177355, -0.008737413212656975, -0.009745576418936253, 0.01652267388999462, 0.015262468717992306, 0.013722220435738564, 0.020415302366018295, -0.03329738602042198, -0.021087411791086197, 0.016480665653944016, -0.0032152701169252396, -0.0025414112024009228, 0.019603172317147255, 0.009808586910367012, 0.009339511394500732, -0.0027024371083825827, -0.04721563681960106, -0.036153849214315414, -0.001972569152712822, 0.009563547559082508, -0.0388982929289341, 0.006637073587626219, -0.008303343318402767, 0.018763035535812378, -0.006525055505335331, 5.8525092754280195e-05, 0.025302093476057053, 0.015500507317483425, 0.008940446190536022, -0.029320742934942245, -0.009325508959591389, -0.008135315962135792, 0.011180808767676353, -0.004421215038746595, 0.019701186567544937, -0.00943752657622099, 0.0441911481320858, 0.004970804322510958, 0.011278824880719185, 0.009997617453336716, 0.006213505286723375, -0.00518083805218339, -0.020527321845293045, 0.03206518664956093, -0.0043266997672617435, -0.028382591903209686, -0.0015227464027702808, 0.012875082902610302, 0.004008148331195116, 0.014842401258647442, 0.03618185222148895, -0.006847107782959938, 0.0009013958042487502, -0.01487040612846613, -0.005236847326159477, 0.01185991894453764, 0.0036510906647890806, -0.01804891973733902, -0.006497051101177931, 0.008954448625445366, 0.015066437423229218, 0.003430555108934641, -0.019967230036854744, 0.03142108395695686, 0.0032082691323012114, 0.0021966053172945976, -0.016830723732709885, 0.02301972359418869, 0.0135261882096529, 0.017026754096150398, 0.01677471399307251, 0.03598581999540329, -0.0018027916084975004, 0.02037329599261284, 0.013008104637265205, 0.024013884365558624, 0.003500566352158785, 0.002852961653843522, -0.012560032308101654, -0.028144553303718567, 0.004249687306582928, 0.013813234865665436, -0.005705923307687044, -0.017026754096150398, -0.024952037259936333, 0.037077996879816055, 0.02381785400211811, 0.00673508970066905, -0.0003568389802239835, 0.026534292846918106, -0.022473635151982307, 0.019351130351424217, 0.011600877158343792, -0.009759578853845596, -0.030580947175621986, 0.024938033893704414, 0.007351189386099577, -0.012868082150816917, 0.026296254247426987, 0.0002887967275455594, 0.024559972807765007, 0.04237085580825806, 0.026884349063038826, -0.020317286252975464, 0.026394270360469818, 0.013512185774743557, 0.005436379462480545, -0.011642883531749249, -0.007498213090002537, 0.002852961653843522, -0.012728058733046055, -0.037554074078798294, 0.023747842758893967, 0.017978908494114876, 0.006462045479565859, 0.08462969213724136, -0.006108488421887159, -0.03590180724859238, -0.0030839990358799696, 0.002093338640406728, -0.004904293455183506, -0.004529732745140791, 0.002506405580788851, -0.019043080508708954, -0.03609783947467804, 0.007631234358996153, -0.008744414895772934, -0.004134168848395348, -0.031057024374604225, -0.011271823197603226, -0.003495315555483103, -0.0011201811721548438, -0.00953554268926382, -0.0047082616947591305, -0.004711762070655823, 0.01527647115290165, -0.023075733333826065, 0.02303372696042061, 0.0448632575571537, -0.015472503378987312, -0.025386106222867966, 0.011817911639809608, 0.007211166433990002, 0.01874903403222561, -0.03506167232990265, 0.0017292797565460205, 0.015458500944077969, -0.042622894048690796, -0.022823693230748177, 0.007232170086354017, -0.0002723878133110702, 0.010767742060124874, 0.011642883531749249, 0.007337186951190233, 0.0022053567226976156, 0.02542811445891857, 0.03237323835492134, -0.005471385084092617, -0.026926355436444283, 0.007708246819674969, -0.006090985611081123, -0.014093279838562012, -0.016578681766986847, -0.0226556658744812], "7c4386ef-80ef-465b-8c3d-9f117b40f19a": [-0.00783123541623354, 0.017133453860878944, 0.023045405745506287, -0.02035560831427574, 0.01229321863502264, -0.007193809375166893, 0.0025409485679119825, 0.00017446037963964045, -0.02810278721153736, -0.026365626603364944, 0.017595762386918068, 0.043008752167224884, -0.022400975227355957, 0.013133780099451542, -0.010394949465990067, 0.02202272228896618, 0.025525063276290894, 0.014947992749512196, -0.0057228258810937405, -0.031577110290527344, -0.007169292774051428, 0.01812811940908432, -0.04065517708659172, -0.01602671481668949, -0.007992343045771122, 0.00089747499441728, 0.016853267326951027, -0.022471021860837936, 0.006514355074614286, -0.00906405970454216, 0.012461330741643906, -0.014499693177640438, -0.018786558881402016, -0.011999021284282207, -0.015004030428826809, 0.0036144163459539413, 0.003968152683228254, -0.03589199483394623, 0.020607776939868927, 0.003145102644339204, 0.04698741063475609, -0.006948645226657391, -0.013848258182406425, -0.024292239919304848, -0.000612909730989486, -0.005659783724695444, 0.0010472000576555729, -0.0020243532489985228, -0.013540051877498627, 0.0294196680188179, 0.02398403361439705, 0.008433638140559196, -0.013722173869609833, -0.004738667979836464, -0.02238696627318859, -0.005001343321055174, -0.020621785894036293, 0.0028614129405468702, 0.019669149070978165, -0.029503723606467247, 0.008664792403578758, -0.003789533395320177, -0.03367851302027702, 0.00909908302128315, -0.009645448066294193, -0.02333960309624672, 0.0011268783127889037, 0.010696150362491608, 0.012846588157117367, -0.013140784576535225, 0.010429972782731056, 0.023353612050414085, -0.004644104745239019, -0.020607776939868927, 0.031268902122974396, -0.006080064456909895, -0.006108083296567202, -0.008384604938328266, -0.029587779194116592, -0.015214171260595322, 0.017231520265340805, -0.019473018124699593, -0.016629116609692574, 0.01917882077395916, 0.02434827759861946, -0.004027692601084709, -0.0059119523502886295, 0.009876602329313755, -0.012342250905930996, 0.008762857876718044, 0.042364321649074554, 0.018380288034677505, 0.019304905086755753, -0.014891955070197582, -0.03003607876598835, -0.0020628790371119976, -0.015634451061487198, 0.009981673210859299, 0.0007897779578343034, 0.004293870646506548, 0.0012949907686561346, 0.0019420483149588108, -0.008041376248002052, -0.012839583680033684, -0.012531377375125885, -0.011718833819031715, -0.001973569393157959, 0.003122337395325303, 0.0018842596327885985, 0.0049383011646568775, -0.0014893707120791078, 0.024502379819750786, 0.008552717976272106, -0.013736182823777199, 0.002857910469174385, -0.012706494890153408, 0.03115682862699032, -0.005306047387421131, -0.012258194386959076, -0.023647809401154518, 0.0010288127232342958, 0.00391561770811677, 0.04396138712763786, -0.018926652148365974, 0.034070778638124466, -0.00014884950360283256, -0.010759192518889904, -0.03020419180393219, -0.006384768523275852, 0.0009211158030666411, 0.015956668183207512, 0.005582732148468494, 0.005250009708106518, -0.00679103983566165, 0.0017415392212569714, 0.02489464171230793, -0.0024218689650297165, -0.017469678074121475, -0.005057381000369787, -0.006857584230601788, -0.0003333791100885719, 0.010359926149249077, -0.014905964955687523, -0.010507023893296719, -0.014471674337983131, 0.02343766763806343, -0.015522376634180546, 0.011865932494401932, 0.00326418224722147, 0.00521848862990737, -0.01285359263420105, -0.040234897285699844, -0.0012564649805426598, 0.03757311776280403, 0.008671796880662441, 0.00882590003311634, -0.013638117350637913, 0.03168918564915657, -0.005572224967181683, -0.0048402356915175915, -0.01700736954808235, 0.009687475860118866, -0.013960332609713078, 0.013750191777944565, 0.022583097219467163, 0.013252859935164452, 0.02888731099665165, 0.00579287251457572, -0.011487679556012154, -0.009442312642931938, -0.004630095325410366, 0.02052372135221958, -0.012300223112106323, 0.010198818519711494, 0.03297804668545723, 0.008531703613698483, 0.018758540973067284, -0.015032049268484116, -0.034827280789613724, -0.027486374601721764, -0.00041086840792559087, 0.025553083047270775, 0.028018731623888016, -0.010030705481767654, -0.0032028912100940943, 0.0014622275484725833, 0.029924005270004272, 0.0013781713787466288, -0.027318263426423073, 0.00449700653553009, 0.002185461111366749, 0.01550836768001318, 0.000959641532972455, -0.004038199782371521, -0.6132739782333374, -0.027038075029850006, -0.005057381000369787, 0.0032449192367494106, 0.008776867762207985, 0.020467683672904968, -0.0059189568273723125, -0.01535426452755928, -0.020271552726626396, 0.03608812391757965, -0.0027861124835908413, -0.008160455152392387, -0.011809894815087318, -0.01812811940908432, -0.010969333350658417, -0.03390266373753548, -0.0016872530104592443, -0.0036564443726092577, -0.015074077062308788, -0.009001017548143864, -0.014247524552047253, 0.023283565416932106, -0.006854081992059946, 0.011522702872753143, -0.03034428507089615, -0.009036040864884853, 0.007011687383055687, -0.020537730306386948, 0.02888731099665165, -0.0008037873194552958, -0.03311813995242119, 0.026827935129404068, 0.010836244560778141, 0.013168803416192532, 0.04169187322258949, -0.03443501889705658, -0.018282221630215645, 0.01853439025580883, 0.01288861595094204, 0.05612151697278023, -0.03505143150687218, -0.010065728798508644, 0.014681815169751644, 0.002677540061995387, -0.012216166593134403, 0.016152799129486084, -0.01941698044538498, 0.006784035358577967, 0.0037755239754915237, -0.02745835669338703, 0.0016531051369383931, -0.004864752292633057, -0.019571082666516304, -0.010654122568666935, 0.01009374763816595, -0.012846588157117367, 0.029980042949318886, -0.020383626222610474, 0.009897616691887379, -0.010009692050516605, -0.01016379427164793, -0.0007188555900938809, 0.00035132860648445785, -0.026897981762886047, -0.018282221630215645, 0.0023745873477309942, -0.007466991897672415, -0.014962002635002136, 0.009344247169792652, -0.021518385037779808, 0.00316611654125154, -0.003064548596739769, 0.017497697845101357, -0.01863245666027069, 0.005967989563941956, 0.030400322750210762, 0.005288535263389349, -0.00962443370372057, -0.007530034054070711, 0.019669149070978165, -0.004644104745239019, -0.028593115508556366, 0.0067104860208928585, 0.021686498075723648, -0.027472365647554398, 0.01216012891381979, -0.013322906568646431, 0.03227757662534714, -0.012062063440680504, 0.014471674337983131, 0.004514518193900585, 0.014114435762166977, -0.0006150986882857978, -0.02848104014992714, 0.004514518193900585, 0.015116105787456036, -0.01033190730959177, 0.0159006305038929, 0.012769537046551704, -0.03269786015152931, -0.009771532379090786, -0.013554060831665993, 0.026323597878217697, 0.006423294078558683, 0.018520381301641464, 0.025174830108880997, -0.019557073712348938, 0.012720503844320774, 0.014821908436715603, -0.02874721772968769, -0.0016145793488249183, -0.023255547508597374, -0.02052372135221958, 0.01738562248647213, 0.009001017548143864, -0.02293333038687706, 0.0028911828994750977, 0.023717856034636497, -0.010836244560778141, -0.003947138786315918, -0.008069394156336784, -0.01585860177874565, 0.004367419518530369, 0.0026390142738819122, -0.01602671481668949, -0.013659131713211536, -0.01647501438856125, 0.003887598868459463, -0.0035391158889979124, -0.005645774304866791, 0.004892770666629076, 0.012615433894097805, 0.022681163623929024, -0.020915983244776726, 0.015816573053598404, 0.007417959161102772, 0.024614455178380013, 0.0007573813199996948, -0.028284909203648567, -0.013385948725044727, -0.014527712017297745, 0.003649439662694931, 0.021126123145222664, 0.0018142128828912973, -0.01924886740744114, 0.013105761259794235, -0.010058724321424961, 0.009225167334079742, 0.007880267687141895, 0.00020521531405393034, -0.005316554103046656, -0.021098105236887932, -0.005498676095157862, -0.008461656980216503, -0.00774717889726162, -0.009274199604988098, 0.0031083279754966497, -0.03496737778186798, -0.014268538914620876, -0.05138635262846947, 0.025090772658586502, 0.005908450111746788, 0.0043954383581876755, 0.006899612490087748, 0.013077742420136929, 0.0119710024446249, -0.016180817037820816, 0.024404315277934074, -0.014254529029130936, -0.02874721772968769, 0.005053878761827946, -0.022849274799227715, 0.017931988462805748, 0.032893989235162735, 0.0031416001729667187, 0.026547746732831, -0.020383626222610474, -0.0024936669506132603, -0.01779189333319664, -0.013112765736877918, 0.01951504684984684, 0.02090197242796421, -0.00011940795229747891, -0.0234096497297287, 0.022162815555930138, 0.01717548258602619, 0.02001938410103321, -0.0031801259610801935, -0.023633800446987152, 0.009582405909895897, 0.002847403520718217, 0.016152799129486084, -0.009736509062349796, 0.013862267136573792, -0.013645121827721596, 0.02259710617363453, 0.019711177796125412, -0.012391284108161926, -0.0122792087495327, 0.03771321102976799, 0.029027406126260757, 0.03558378666639328, 0.0041327630169689655, 0.0020085927098989487, -0.007488005794584751, -0.019290896132588387, 0.009491344913840294, -0.017413640394806862, -0.015032049268484116, 0.01170482486486435, 0.0271641593426466, 0.007880267687141895, -0.025917327031493187, -0.01155072171241045, 0.012524372898042202, 0.0432889387011528, 0.001715271733701229, -0.0012293218169361353, -0.00514844199642539, 0.015326245687901974, -0.020215515047311783, -0.003344736061990261, 0.025693176314234734, 0.01427554339170456, 0.019262878224253654, -0.0030995721463114023, -0.004024190362542868, 0.004595072008669376, 0.03367851302027702, -0.02855108678340912, -0.014226510189473629, 0.03415483236312866, 0.04071121662855148, 0.01477988064289093, 0.015718508511781693, 0.01968315802514553, 0.03140899911522865, 0.005299042444676161, 0.03513548895716667, 0.0037650170270353556, 0.023255547508597374, 0.017413640394806862, -0.0027615961153060198, -0.00487175676971674, 0.01772184669971466, 0.0018142128828912973, 0.013939318247139454, 0.019837262108922005, -0.009904621168971062, 0.011886946856975555, 0.0023833434097468853, 0.01542431116104126, -0.01405139360576868, 0.0020576254464685917, -0.0035093461629003286, -0.01569048874080181, -0.0006396151147782803, -0.0026880470104515553, 0.02841099351644516, 0.02147635817527771, 0.026968028396368027, 0.004945306107401848, 0.03379058837890625, -0.014373608864843845, 0.01274852268397808, -0.026057420298457146, -0.012881611473858356, -0.007235837168991566, -0.0008607003837823868, -0.017189491540193558, -0.038609810173511505, -0.031268902122974396, 0.007894277572631836, -0.025384970009326935, 0.006160618271678686, 0.00844064261764288, 0.0017608021153137088, 0.004815719556063414, 0.020369617268443108, 0.019837262108922005, -0.04228026419878006, -0.022400975227355957, 0.02671585977077484, 0.008643778041005135, 0.009141110815107822, -0.011928974650800228, -0.028523068875074387, 0.007473996374756098, -0.013939318247139454, -0.003444552654400468, -0.010450986213982105, 0.01640496775507927, -0.0020155974198132753, -0.010710160247981548, -0.0208039078861475, 0.008349581621587276, 0.03149305284023285, -0.01557841431349516, -0.00648633623495698, 0.019697166979312897, 0.001957808854058385, 0.003085562726482749, -0.0035373647697269917, 0.00415027467533946, 0.028425002470612526, -0.013904294930398464, -0.007558052893728018, -0.015340255573391914, -0.014583749696612358, 0.014114435762166977, 0.03185729682445526, 0.005341070704162121, 0.003209895920008421, 0.027178168296813965, 0.010955323465168476, 0.011844918131828308, 0.003005008911713958, -0.01236326526850462, 0.021602442488074303, 0.016461003571748734, -0.0021767050493508577, -0.004024190362542868, -0.008153450675308704, -0.012188147753477097, 0.023619789630174637, 0.030624473467469215, -0.02255507931113243, 0.0012205659877508879, 0.00316611654125154, -0.016054732725024223, -0.01470983400940895, -0.003758012317121029, -0.004703644663095474, 0.007516024634242058, -0.02817283384501934, -0.023017387837171555, 0.015396292321383953, -0.0054111173376441, 0.0318012610077858, 0.00763510400429368, 0.01829623058438301, -0.014513703063130379, -0.011326571926474571, -0.0018457338446751237, 0.0045355320908129215, 0.003551374189555645, 0.04348507151007652, 0.014107431285083294, 0.002232742728665471, -0.016012703999876976, 0.03496737778186798, 0.026799915358424187, 0.010037709958851337, -0.02097202092409134, -0.005390103440731764, 0.05029362067580223, 0.004952310584485531, -0.0049383011646568775, 0.005929464008659124, 0.011179473251104355, 0.013841252774000168, 0.014499693177640438, 0.021728524938225746, 0.010254855267703533, 0.024908652529120445, 0.008230501785874367, -0.010472000576555729, 0.00648633623495698, 0.002129423664882779, -0.025693176314234734, 0.01469582412391901, 0.03720887377858162, -0.02123819850385189, -0.02630958892405033, 0.004941803868860006, 0.01121449749916792, -0.03152107074856758, -0.01527020800858736, -0.03210946545004845, -0.02140630967915058, -0.017833922058343887, -0.009288209490478039, -0.007565057370811701, -0.005712318699806929, -0.01836627721786499, -0.016727183014154434, 0.0036739560309797525, 0.0024428830947726965, -0.01772184669971466, -0.001639971393160522, -0.027388310059905052, -0.016755200922489166, -0.029111461713910103, -0.01089228130877018, -0.011382609605789185, -0.031072773039340973, -0.029615798965096474, -0.023479696363210678, 0.005743839778006077, 0.025917327031493187, 0.017539724707603455, 0.00845465250313282, -0.007081734482198954, 0.02874721772968769, -0.00020444917026907206, 0.003989167045801878, -0.013505028560757637, -0.02573520503938198, -0.008426633663475513, 0.013112765736877918, -0.0009447566117160022, -0.0075090196914970875, -0.012258194386959076, -0.009967663325369358, 0.0308766420930624, -0.004269354045391083, 0.01224418543279171, -0.010794215835630894, 0.03563982620835304, -0.0030785580165684223, 0.0159006305038929, 0.005915454588830471, 0.029279574751853943, -0.03620019927620888, 0.028999386355280876, 0.0016653633210808039, -0.018086090683937073, -0.02052372135221958, 0.00020827986008953303, 0.004059213679283857, -0.010640112683176994, -0.013848258182406425, 0.005687802564352751, 0.028046749532222748, 0.024236202239990234, -0.02245701290667057, 0.00406621815636754, -0.005498676095157862, 0.0024603947531431913, 0.021056076511740685, 0.008699815720319748, 0.02087395451962948, 0.015172142535448074, -0.02157442271709442, 0.016012703999876976, 0.012020035646855831, 0.00979254674166441, -0.009344247169792652, -0.0016802483005449176, 0.02604341134428978, -0.00021386171283666044, -0.014065402559936047, -0.032417669892311096, 0.016699163243174553, -0.009582405909895897, 0.02773854322731495, -0.010801221244037151, -0.03297804668545723, -0.026085438206791878, -0.016461003571748734, 0.0029682342428714037, 0.02370384708046913, 0.004612583667039871, -0.008643778041005135, -0.02530091442167759, 0.006440805736929178, -0.023759884759783745, -0.0346311517059803, 0.014429646544158459, -0.03216550499200821, -0.0024271225556731224, 0.014387618750333786, -0.008867928758263588, 0.022919321432709694, 0.007039706222712994, -0.009988677687942982, -0.01626487262547016, -0.009869597852230072, -0.017357604578137398, -0.029811929911375046, -0.027080103754997253, 0.015788555145263672, 0.041719891130924225, 0.03558378666639328, 0.032725878059864044, -0.006640439387410879, 0.010983342304825783, -0.0007070351857692003, -0.008958988822996616, 0.016222845762968063, -0.013652126304805279, -0.010310892947018147, -0.041243571788072586, -0.010394949465990067, 0.016208834946155548, -0.006122092716395855, 0.009078068658709526, 0.008111422881484032, 0.005102911498397589, 0.021658478304743767, 0.008629769086837769, -0.02637963555753231, -0.0439053513109684, -0.027948684990406036, 0.009456321597099304, -0.007312888745218515, 0.004703644663095474, 0.0076421089470386505, -0.024306248873472214, -0.013526041992008686, 0.002589981537312269, -0.025791242718696594, 0.006671960465610027, 0.005638769827783108, 0.018814578652381897, 0.008188473992049694, -0.016657136380672455, -0.005855914670974016, -0.014443655498325825, -0.02577723190188408, -0.019501036033034325, -0.034547094255685806, 0.006031031720340252, 0.021896637976169586, -0.004693137481808662, 0.022414984181523323, 0.013974342495203018, 0.02857910469174385, -0.010037709958851337, 0.008125431835651398, 0.006552880629897118, -0.0260153915733099, -0.009232171811163425, -0.002810628851875663, 0.0070992461405694485, -0.024712521582841873, -0.032865971326828, 0.016699163243174553, 0.003286947263404727, 0.005845407955348492, -0.03054041601717472, 0.022064751014113426, -0.012552391737699509, -0.02580525167286396, 0.016489023342728615, 0.028130805119872093, 0.03264182060956955, -0.015746526420116425, 0.032249558717012405, 0.014219505712389946, 0.009078068658709526, -0.017903968691825867, 0.012573405168950558, 0.022064751014113426, -0.0009631438879296184, 0.04048706591129303, 0.02939164824783802, -0.0061676232144236565, -0.001843982725404203, 0.0054251267574727535, -0.01486393716186285, -0.020033393055200577, -0.043008752167224884, 0.03003607876598835, 0.0363963320851326, 0.017875950783491135, -0.027052083984017372, -0.01029688399285078, -0.013995355926454067, 0.01765180006623268, 0.0029069434385746717, 0.008083404041826725, -0.01576053537428379, -0.0038245567120611668, -0.027374299243092537, 0.05668189376592636, -0.01139661855995655, 0.022807246074080467, -0.018884625285863876, -0.025511054322123528, 0.017735857516527176, -0.002765098586678505, 0.009001017548143864, 0.018590427935123444, 0.0033202196937054396, 0.048080142587423325, 0.00191928306594491, 0.011130440980196, 0.004707146901637316, -0.01951504684984684, -0.017357604578137398, 0.002560211578384042, -0.020915983244776726, 0.017931988462805748, -0.030484380200505257, 0.0015821827109903097, -0.018170146271586418, -0.005449643358588219, 0.015032049268484116, -0.01664312556385994, -0.0027178169693797827, -0.01417047344148159, -0.00026880469522438943, 0.009785541333258152, 0.031296923756599426, 0.0020366115495562553, 0.002108409535139799, 0.016082752496004105, -0.0004526776319835335, 0.004899775609374046, -0.014114435762166977, 0.0004231266211718321, 0.017707837745547295, -0.041607815772295, 0.010030705481767654, 0.0038805941585451365, -0.008657787926495075, 0.009897616691887379, 0.009785541333258152, -0.016054732725024223, 0.02262512594461441, 0.005789370276033878, -0.03608812391757965, 0.012895621359348297, 0.026940010488033295, -0.0010244348086416721, -0.043849315494298935, 0.006682467181235552, -0.03115682862699032, -0.00830054935067892, -0.00444797333329916, -0.01714746281504631, -0.03154909238219261, -0.019262878224253654, -0.01786194182932377, 0.011557726189494133, 0.013554060831665993, -0.009687475860118866, 0.013862267136573792, -0.0016714924713596702, -0.01309175230562687, -0.00579287251457572, -0.007375930901616812, 0.013743187300860882, -0.0050293621607124805, -0.013189817778766155, 0.022106777876615524, -0.005901445169001818, 0.042700547724962234, -0.016629116609692574, 0.004899775609374046, 0.01843632571399212, -0.024306248873472214, -0.0035548764280974865, 0.008566726930439472, 0.016517041251063347, -0.014219505712389946, -0.010023701004683971, -0.0003920433227904141, 0.010997352190315723, -0.018898634240031242, 0.017805904150009155, 0.01302170567214489, -0.046118829399347305, 0.002553206868469715, 0.008209488354623318, -0.007403949741274118, 0.0075930762104690075, -0.007046710699796677, -0.03507944941520691, 0.008958988822996616, -0.020691832527518272, -0.005540703888982534, 0.004363917279988527, -0.017707837745547295, 0.05530897527933121, 0.04177592694759369, 0.011207492090761662, -0.014976011589169502, -0.03146503493189812, -0.031240884214639664, -0.022541068494319916, -0.016853267326951027, 0.006924129091203213, -0.012286213226616383, 0.005866421852260828, -0.015956668183207512, 0.02621152251958847, -0.02398403361439705, 0.0271641593426466, -0.024068089202046394, 0.008601750247180462, -0.005039869341999292, -0.005120423156768084, -0.012706494890153408, -0.013869271613657475, -0.04751976951956749, -0.01731557585299015, 0.0018982690526172519, 0.023871958255767822, 0.012986681424081326, 0.03359445929527283, -0.009491344913840294, 0.013350925408303738, 0.017301566898822784, -0.010829239152371883, 0.0021837097592651844, 0.006342740263789892, 0.013105761259794235, -0.04312082752585411, -0.03230559825897217, 0.0057788630947470665, 0.0020628790371119976, -0.016657136380672455, 0.002943717874586582, 0.012475339695811272, 0.0057298303581774235, -0.006994175724685192, -0.014023374766111374, -0.008461656980216503, 0.005953980144113302, -0.03084862232208252, 0.008755853399634361, 0.008461656980216503, -0.010373935103416443, 0.028018731623888016, 0.026253551244735718, 0.009771532379090786, -0.025258885696530342, -0.006959152407944202, -0.01731557585299015, 0.022232862189412117, 0.018786558881402016, -0.010710160247981548, 0.0060765622183680534, -0.01469582412391901, 0.03547171503305435, -0.024138135835528374, 0.012370269745588303, -0.0015734268818050623, -0.009071064181625843, -0.025693176314234734, 0.04295271635055542, 0.022891303524374962, -0.015886619687080383, 0.02489464171230793, -0.008601750247180462, 0.02123819850385189, -0.007579066790640354, 0.004756179638206959, 0.016783220693469048, -0.034687187522649765, -0.006321726366877556, 0.005873426329344511, -0.015102095901966095, -0.01891264319419861, -0.014373608864843845, 0.0032624308951199055, -0.015060068108141422, 0.0015909385401755571, 0.18750134110450745, -0.01085725799202919, 0.020551739260554314, 0.030764566734433174, 0.007663122843950987, -0.003101323265582323, 0.006675462704151869, 0.0049383011646568775, 0.011732843704521656, 0.02293333038687706, 0.018086090683937073, 0.0019770716316998005, -0.01681123860180378, -0.005645774304866791, 0.0257071852684021, 0.035863976925611496, -0.023381631821393967, -0.032389651983976364, -0.00840561930090189, 0.02635161578655243, -0.005670290905982256, -0.01917882077395916, 0.002213479718193412, -0.020453672856092453, 0.026463691145181656, 0.005316554103046656, -0.006952147465199232, -0.003448055125772953, 0.03561180830001831, -0.016923313960433006, -0.0308766420930624, 0.007043208461254835, 0.01109541766345501, -0.014569739811122417, -0.04129960760474205, -0.014597758650779724, 0.020383626222610474, 0.0036074116360396147, -0.0027353286277502775, 0.00960342027246952, 0.017637791112065315, -0.017777884379029274, 0.02283526584506035, -0.008363591507077217, -0.017833922058343887, 0.013042719103395939, 0.02090197242796421, -0.004875259008258581, 0.0018317245412617922, -0.023423658683896065, -0.01427554339170456, 0.01209008228033781, 0.001114620128646493, 0.01170482486486435, -0.004934798926115036, 0.005099409259855747, 0.01266446616500616, -0.0017686823848634958, 0.019725186750292778, 0.014177477918565273, -0.008741844445466995, 0.010479005053639412, -0.004409447778016329, 0.016194825991988182, -0.02793467417359352, 0.01139661855995655, -0.019809242337942123, 0.003328975522890687, 0.0009097331785596907, -0.01566247083246708, 0.0027475866954773664, -0.005390103440731764, -0.031268902122974396, -0.006857584230601788, -0.0311848483979702, -0.023493705317378044, 0.007036203984171152, 0.026267560198903084, 0.052310969680547714, 0.03196937218308449, 0.016348930075764656, -0.02513280138373375, 0.0006746384897269309, 0.008181469514966011, -0.012223171070218086, -0.04676326364278793, 0.0227932371199131, -0.0038140497636049986, 0.011494684033095837, -0.018478352576494217, -0.01033190730959177, -0.02171451598405838, -0.024236202239990234, -0.03023221157491207, 0.012048054486513138, -0.003768519265577197, 0.015312236733734608, 0.022092768922448158, 0.0006939013837836683, -0.007228832691907883, -0.021154141053557396, 0.056906040757894516, 0.04920089244842529, 0.006370759103447199, 0.012468335218727589, -0.013988351449370384, -0.0020628790371119976, -0.019879288971424103, 0.007466991897672415, -0.01681123860180378, -0.009561391547322273, -0.028214862570166588, 0.005659783724695444, 0.004192302469164133, 0.02052372135221958, 0.01924886740744114, -0.013252859935164452, -0.0219526756554842, 0.016769209876656532, 0.006622927729040384, 0.0014420890947803855, -0.010009692050516605, -0.00048463649000041187, 0.008622764609754086, -0.021770553663372993, -0.023563751950860023, -0.014373608864843845, 0.019024718552827835, -0.013420972041785717, -0.03367851302027702, 0.026463691145181656, -0.02137829177081585, 0.024096108973026276, 0.014443655498325825, 0.018716512247920036, -0.030904660001397133, -0.0015559151070192456, -0.0323336161673069, -0.016769209876656532, 0.005288535263389349, -0.0010594582417979836, 0.0134279765188694, 0.029139479622244835, -0.0013825492933392525, -0.012671470642089844, 0.022891303524374962, 0.015382283367216587, 0.017021378502249718, -0.014226510189473629, -0.012713499367237091, -0.0038525755517184734, 0.007922296412289143, -0.0026880470104515553, 0.007852249778807163, 0.032753895968198776, -0.012258194386959076, -0.016517041251063347, -0.010002686642110348, -0.003414782928302884, -0.0012275706976652145, -0.05303945764899254, 0.006629932206124067, 0.017203500494360924, -0.018044061958789825, -0.034070778638124466, -0.024068089202046394, -0.1789836585521698, 0.0011137445690110326, 0.0012984930071979761, -0.03547171503305435, 0.007838239893317223, 0.016545061022043228, 0.027346281334757805, 0.004738667979836464, -0.03555576875805855, -0.017931988462805748, 0.012412297539412975, -0.015284217894077301, 0.0016504783416166902, -0.02032758854329586, -0.0013615351635962725, -0.0009036040864884853, -0.017343593761324883, 0.024236202239990234, 0.03311813995242119, 0.012447320856153965, 0.0640508159995079, -0.0245584174990654, 0.01302170567214489, -0.009512359276413918, -0.010324901901185513, 0.012643452733755112, -0.001745917135849595, 0.02174253575503826, 0.005428628996014595, -0.04508213698863983, -0.008692811243236065, 0.0003841630823444575, 0.011235510930418968, 0.0020944001153111458, -0.010051719844341278, 0.005824393592774868, -0.00395764596760273, 1.2223992598592304e-05, -0.024362286552786827, 0.047295618802309036, 0.018618445843458176, 0.02293333038687706, 0.0060765622183680534, 0.009645448066294193, -0.010549052618443966, 0.002192465588450432, 0.012475339695811272, -0.023857949301600456, 0.010086743161082268, -0.016278883442282677, 0.0012923639733344316, -0.012517368420958519, 0.027920665219426155, 0.005372591782361269, 0.006787537597119808, 0.012447320856153965, -0.012692485004663467, 0.0053340657614171505, 0.015564405359327793, 0.005904947407543659, -0.013715168461203575, -0.009883607737720013, 0.012237180955708027, 0.012342250905930996, -0.007326898165047169, -0.034687187522649765, -0.020789898931980133, -0.01664312556385994, -0.038133494555950165, 0.01941698044538498, 0.007403949741274118, -0.011501689441502094, -0.02630958892405033, -0.009764527902007103, 0.023465687409043312, 0.01606874167919159, -0.01024785079061985, 0.02841099351644516, 0.010808225721120834, -0.019388962537050247, -0.008503684774041176, 0.03210946545004845, -0.0065703922882676125, 0.01803005300462246, -0.0068505797535181046, -0.028116796165704727, 0.016152799129486084, 0.01566247083246708, 0.0009167378302663565, -0.007326898165047169, 0.012944653630256653, -0.02300337888300419, 0.0007311137742362916, -0.002640765393152833, -0.004080227576196194, -0.012321236543357372, 0.02489464171230793, 0.011263529770076275, 0.015172142535448074, -0.01035292074084282, -0.015172142535448074, 0.006885603070259094, -0.036340292543172836, 0.02221885323524475, 0.02986796759068966, -0.001407065661624074, -0.03101673536002636, 0.015018039382994175, 0.014142454601824284, -0.02353573404252529, 0.017399631440639496, -0.018254203721880913, 0.02259710617363453, 0.005025859922170639, -0.01286760251969099, 0.005292037967592478, -0.010640112683176994, -0.00526051688939333, 0.014527712017297745, -0.034182850271463394, 0.04356912523508072, -0.009925635531544685, -0.021770553663372993, 0.009904621168971062, -0.03334229066967964, -0.003600406926125288, -0.11487679928541183, -0.016657136380672455, 0.026771897450089455, 0.0502656027674675, -0.029279574751853943, 0.02888731099665165, -0.016362939029932022, 0.039086129516363144, -0.03325823321938515, 0.043036770075559616, -0.0037229887675493956, -0.024600446224212646, 0.0018369780154898763, 0.00406621815636754, -0.006594908889383078, 0.011858928017318249, 0.012566400691866875, -0.011459660716354847, -0.0170493982732296, 0.04883664846420288, 0.007516024634242058, 0.01427554339170456, 0.016727183014154434, -0.0007595702772960067, -0.01978122442960739, -0.013420972041785717, -0.0380774550139904, 0.023311583325266838, -0.006199144292622805, 0.014415636658668518, 0.05421624332666397, -0.016657136380672455, 0.017371613532304764, 0.0004920789506286383, -0.007586071267724037, 0.01092730462551117, -0.014233515597879887, -0.023857949301600456, 0.00506438547745347, -0.017035389319062233, 0.006608918309211731, 0.02235894650220871, -0.00014567551261279732, 0.0039996737614274025, -0.01856241002678871, -0.00847566593438387, -0.020649803802371025, 0.01599869504570961, -0.005789370276033878, -0.02986796759068966, -0.015032049268484116, -0.03620019927620888, 0.007852249778807163, 0.006549378391355276, -0.011837913654744625, -0.0015191405545920134, 0.025791242718696594, -0.004374424461275339, -0.021602442488074303, -0.0016102014342322946, -0.0076911416836082935, 0.007081734482198954, -0.03149305284023285, 0.01602671481668949, 0.026057420298457146, 0.0070502134039998055, -0.0340987965464592, -0.03202540799975395, -0.003708979580551386, -0.01917882077395916, -0.0075930762104690075, 0.004546039272099733, -0.008510689251124859, 0.020958010107278824, -0.02496469020843506, -0.006626429967582226, -0.025272894650697708, -0.030456360429525375, -0.00021933413518127054, 0.022485030815005302, -0.009946649894118309, -0.027346281334757805, -0.011018365621566772, -0.007761188317090273, 0.014947992749512196, -0.003215149277821183, -0.003432294586673379, -0.030316267162561417, -0.012300223112106323, -0.02107008546590805, 0.012181143276393414, 0.007088738959282637, 0.02614147588610649, -0.025483036413788795, -0.03140899911522865, 0.035359639674425125, -0.004682630300521851, 0.0023027893621474504, 0.025412989780306816, 0.01396733708679676, -0.02052372135221958, 0.0245584174990654, -0.05895141139626503, 0.026197513565421104, -0.00045924450387246907, -0.004815719556063414, -0.007235837168991566, -0.017875950783491135, 0.004461982753127813, 0.00349183427169919, -0.009526368230581284, 0.031605128198862076, -0.023787902668118477, -0.004195805173367262, -0.010037709958851337, -0.0016487272223457694, -0.021532393991947174, -0.02989598549902439, 0.021756544709205627, -0.004356912802904844, 0.010654122568666935, -0.002190714469179511, -0.009911625646054745, 0.010731173679232597, 0.005519689992070198, 0.005032864399254322, -0.029027406126260757, -0.016629116609692574, -0.0011785378446802497, 0.030904660001397133, 0.006626429967582226, 0.0053340657614171505, 0.0005152819794602692, -0.012874606996774673, -0.022134797647595406, 0.01769382879137993, -0.007368926424533129, -0.0004557421780191362, 0.009561391547322273, 0.025651147589087486, 0.01752571575343609, 0.001577804796397686, -0.03331427276134491, -0.03855377435684204, 0.011291548609733582, 0.007530034054070711, -0.029027406126260757, -0.010415962897241116, -0.0031626143027096987, -0.013224841095507145, -0.011662797071039677, 0.0167411919683218, 0.017259538173675537, 0.003416534047573805, -0.011333576403558254, -0.02618350461125374, 0.0023167987819761038, 0.00033666257513687015, -0.0013764201430603862, -0.02532893233001232, 0.024600446224212646, -0.02157442271709442, 0.036172181367874146, 0.00602752948179841, 0.02953174151480198, 0.008034370839595795, 0.007186804432421923, 0.0019017714075744152, -0.034182850271463394, 0.01031789742410183, -0.014513703063130379, -0.007284869905561209, 0.00614660931751132, 0.004630095325410366, 0.021532393991947174, 0.01476587075740099, 0.012307227589190006, 0.001259967335499823, -0.005638769827783108, 0.00422732625156641, 0.010023701004683971, 0.02312946319580078, 0.0014447157736867666, -0.003989167045801878, 0.004468987695872784, 0.01216012891381979, 0.006094073876738548, 0.00598550122231245, -0.02137829177081585, 0.026729868724942207, 0.00840561930090189, 0.011242515407502651, -0.006987171247601509, 0.02462846413254738, 0.011627773754298687, 0.005873426329344511, -0.009960658848285675, 0.028495049104094505, -0.018450334668159485, 0.013252859935164452, 0.01405139360576868, 0.028158824890851974, 0.0181981660425663, -0.00042509668855927885, -0.024432333186268806, -0.01985127106308937, -0.015606433153152466, 0.011992016807198524, 0.0017861940432339907, -0.019907308742403984, -0.008055385202169418, 0.01920684054493904, 0.017413640394806862, 0.018338259309530258, 0.0004942679079249501, 0.022471021860837936, -0.016461003571748734, 0.005025859922170639, -0.0033202196937054396, -0.011193483136594296, -0.03687265142798424, 0.016250863671302795, 0.018254203721880913, -0.01435959991067648, 0.048248253762722015, 0.021028056740760803, 0.011263529770076275, 0.04197205975651741, 0.0294196680188179, -0.030456360429525375, 0.02418016456067562, 0.006559885572642088, 0.0023010382428765297, -0.0023553245700895786, 0.004738667979836464, 0.0010752187808975577, -0.02824288047850132, -0.0155924241989851, 0.020005373284220695, 0.008293543942272663, -0.001662736525759101, 0.0836639329791069, 0.0009202401852235198, -0.0005165953771211207, -0.006622927729040384, -0.022414984181523323, 0.0025076763704419136, -0.0035934022162109613, 0.00010353796824347228, 0.005950477905571461, -0.0323336161673069, 0.003579392796382308, -0.018170146271586418, -0.0005822642706334591, -0.034715209156274796, -0.007859254255890846, -0.026673831045627594, 0.006101078819483519, 0.0013519037747755647, -0.012335246428847313, -0.011494684033095837, 0.01048601046204567, -0.01690930500626564, 0.03140899911522865, 0.009631439112126827, -0.005925961770117283, -0.00713777169585228, 0.008573731407523155, 0.007943309843540192, 8.482232806272805e-05, -0.03919820487499237, 0.0038315614219754934, -0.002248503267765045, -0.04149574041366577, -0.025104783475399017, 0.01009374763816595, -0.005897942930459976, 0.004248340148478746, -0.01664312556385994, -0.0018807572778314352, -0.014114435762166977, 0.00514143705368042, 0.02374587394297123, -0.004896273370832205, -0.03782528638839722, 0.014142454601824284, -0.005974994506686926, -0.013876276090741158, -0.013890285976231098, -0.025090772658586502]}}, "docstore": {"docs": {"b152b76c-e327-44f6-8205-029df6326941": {"text": "ImageNet Classi\ufb01cation with Deep Convolutional\nNeural Networks\nAlex Krizhevsky\nUniversity of Toronto\nkriz@cs.utoronto.caIlya Sutskever\nUniversity of Toronto\nilya@cs.utoronto.caGeoffrey E. Hinton\nUniversity of Toronto\nhinton@cs.utoronto.ca\nAbstract\nWe trained a large, deep convolutional neural network to classify the 1.2 million\nhigh-resolution images in the ImageNet LSVRC-2010 contest into the 1000 dif-\nferent classes. On the test data, we achieved top-1 and top-5 error rates of 37.5%\nand 17.0% which is considerably better than the previous state-of-the-art. The\nneural network, which has 60 million parameters and 650,000 neurons, consists\nof \ufb01ve convolutional layers, some of which are followed by max-pooling layers,\nand three fully-connected layers with a \ufb01nal 1000-way softmax. To make train-\ning faster, we used non-saturating neurons and a very ef\ufb01cient GPU implemen-\ntation of the convolution operation. To reduce over\ufb01tting in the fully-connected\nlayers we employed a recently-developed regularization method called \u201cdropout\u201d\nthat proved to be very effective. We also entered a variant of this model in the\nILSVRC-2012 competition and achieved a winning top-5 test error rate of 15.3%,\ncompared to 26.2% achieved by the second-best entry.\n1 Introduction\nCurrent approaches to object recognition make essential use of machine learning methods. To im-\nprove their performance, we can collect larger datasets, learn more powerful models, and use bet-\nter techniques for preventing over\ufb01tting. Until recently, datasets of labeled images were relatively\nsmall \u2014 on the order of tens of thousands of images (e.g., NORB [16], Caltech-101/256 [8, 9], and\nCIFAR-10/100 [12]). Simple recognition tasks can be solved quite well with datasets of this size,\nespecially if they are augmented with label-preserving transformations. For example, the current-\nbest error rate on the MNIST digit-recognition task (<0.3%) approaches human performance [4].\nBut objects in realistic settings exhibit considerable variability, so to learn to recognize them it is\nnecessary to use much larger training sets. And indeed, the shortcomings of small image datasets\nhave been widely recognized (e.g., Pinto et al. [21]), but it has only recently become possible to col-\nlect labeled datasets with millions of images. The new larger datasets include LabelMe [23], which\nconsists of hundreds of thousands of fully-segmented images, and ImageNet [6], which consists of\nover 15 million labeled high-resolution images in over 22,000 categories.\nTo learn about thousands of objects from millions of images, we need a model with a large learning\ncapacity. However, the immense complexity of the object recognition task means that this prob-\nlem cannot be speci\ufb01ed even by a dataset as large as ImageNet, so our model should also have lots\nof prior knowledge to compensate for all the data we don\u2019t have. Convolutional neural networks\n(CNNs) constitute one such class of models [16, 11, 13, 18, 15, 22, 26]. Their capacity can be con-\ntrolled by varying their depth and breadth, and they also make strong and mostly correct assumptions\nabout the nature of images (namely, stationarity of statistics and locality of pixel dependencies).\nThus, compared to standard feedforward neural networks with similarly-sized layers, CNNs have\nmuch fewer connections and parameters and so they are easier to train, while their theoretically-best\nperformance is likely to be only slightly worse.\n1\nDespite the attractive qualities of CNNs, and despite the relative ef\ufb01ciency of their local architecture,\nthey have still been prohibitively expensive to apply in large scale to high-resolution images. Luck-\nily, current GPUs, paired with a highly-optimized implementation of 2D convolution, are powerful\nenough to facilitate the training of interestingly-large CNNs, and recent datasets such as ImageNet\ncontain enough labeled examples to train such models without severe over\ufb01tting.\nThe speci\ufb01c contributions of this paper are as follows: we trained one of the largest convolutional\nneural networks to date on the subsets of ImageNet used in the ILSVRC-2010 and ILSVRC-2012\ncompetitions [2] and achieved by far the best results ever reported on these datasets. We wrote a\nhighly-optimized GPU implementation of 2D convolution and all the other operations inherent in\ntraining convolutional neural networks, which we make available publicly1. Our network contains\na number of new and unusual features which improve its performance and reduce its training time,\nwhich are detailed in Section 3. The size of our network made over\ufb01tting a signi\ufb01cant problem, even\nwith 1.2 million labeled training examples, so we used several effective techniques for preventing\nover\ufb01tting, which are described in Section 4. Our \ufb01nal network contains \ufb01ve convolutional and\nthree fully-connected layers, and this depth seems to be important: we found that removing any\nconvolutional layer (each of which contains no more than 1% of the model\u2019s parameters) resulted in\ninferior performance.\nIn the end, the network\u2019s size is limited mainly by the amount of memory available on current GPUs\nand by the amount of training time that we are willing to tolerate. Our network takes between \ufb01ve\nand six days to train on two GTX 580 3GB GPUs. All of our experiments suggest that our results\ncan be improved simply by waiting for faster GPUs and bigger datasets to become available.\n2 The Dataset\nImageNet is a dataset of over 15 million labeled high-resolution images belonging to roughly 22,000\ncategories. The images were collected from the web and labeled by human labelers using Ama-\nzon\u2019s Mechanical Turk crowd-sourcing tool. Starting in 2010, as part of the Pascal Visual Object\nChallenge, an annual competition called the ImageNet Large-Scale Visual Recognition Challenge\n(ILSVRC) has been held. ILSVRC uses a subset of ImageNet with roughly 1000 images in each of\n1000 categories. In all, there are roughly 1.2 million training images, 50,000 validation images, and\n150,000 testing images.\nILSVRC-2010 is the only version of ILSVRC for which the test set labels are available, so this is\nthe version on which we performed most of our experiments. Since we also entered our model in\nthe ILSVRC-2012 competition, in Section 6 we report our results on this version of the dataset as\nwell, for which test set labels are unavailable. On ImageNet, it is customary to report two error rates:\ntop-1 and top-5, where the top-5 error rate is the fraction of test images for which the correct label\nis not among the \ufb01ve labels considered most probable by the model.\nImageNet consists of variable-resolution images, while our system requires a constant input dimen-\nsionality. Therefore, we down-sampled the images to a \ufb01xed resolution of 256\u0002256. Given a\nrectangular image, we \ufb01rst rescaled the image such that the shorter side was of length 256, and then\ncropped out the central 256\u0002256patch from the resulting image. We did not pre-process the images\nin any other way, except for subtracting the mean activity over the training set from each pixel. So\nwe trained our network on the (centered) raw RGB values of the pixels.\n3 The Architecture\nThe architecture of our network is summarized in Figure 2. It contains eight learned layers \u2014\n\ufb01ve convolutional and three fully-connected. Below, we describe some of the novel or unusual\nfeatures of our network\u2019s architecture. Sections 3.1-3.4 are sorted according to our estimation of\ntheir importance, with the most important \ufb01rst.\n1http://code.google.com/p/cuda-convnet/\n2\n3.1 ReLU Nonlinearity\nFigure 1: A four-layer convolutional neural\nnetwork with ReLUs (solid line) reaches a 25%\ntraining error rate on CIFAR-10 six times faster\nthan an equivalent network with tanh neurons\n(dashed line) . The learning rates for each net-\nwork were chosen independently to make train-\ning as fast as possible. No regularization of\nany kind was employed. The magnitude of the\neffect demonstrated here varies with network\narchitecture, but networks with ReLUs consis-\ntently learn several times faster than equivalents\nwith saturating neurons.The standard way to model a neuron\u2019s output fas\na function of its input xis withf(x) = tanh(x)\norf(x) = (1 +e\u0000x)\u00001. In terms of training time\nwith gradient descent, these saturating nonlinearities\nare much slower than the non-saturating nonlinearity\nf(x) = max(0;x). Following Nair and Hinton [20],\nwe refer to neurons with this nonlinearity as Recti\ufb01ed\nLinear Units (ReLUs). Deep convolutional neural net-\nworks with ReLUs train several times faster than their\nequivalents with tanh units. This is demonstrated in\nFigure 1, which shows the number of iterations re-\nquired to reach 25% training error on the CIFAR-10\ndataset for a particular four-layer convolutional net-\nwork. This plot shows that we would not have been\nable to experiment with such large neural networks for\nthis work if we had used traditional saturating neuron\nmodels.\nWe are not the \ufb01rst to consider alternatives to tradi-\ntional neuron models in CNNs. For example, Jarrett\net al. [11] claim that the nonlinearity f(x) =jtanh(x)j\nworks particularly well with their type of contrast nor-\nmalization followed by local average pooling on the\nCaltech-101 dataset. However, on this dataset the pri-\nmary concern is preventing over\ufb01tting, so the effect\nthey are observing is different from the accelerated\nability to \ufb01t the training set which we report when us-\ning ReLUs. Faster learning has a great in\ufb02uence on the\nperformance of large models trained on large datasets.\n3.2 Training on Multiple GPUs\nA single GTX 580 GPU has only 3GB of memory, which limits the maximum size of the networks\nthat can be trained on it. It turns out that 1.2 million training examples are enough to train networks\nwhich are too big to \ufb01t on one GPU. Therefore we spread the net across two GPUs. Current GPUs\nare particularly well-suited to cross-GPU parallelization, as they are able to read from and write to\none another\u2019s memory directly, without going through host machine memory. The parallelization\nscheme that we employ essentially puts half of the kernels (or neurons) on each GPU, with one\nadditional trick: the GPUs communicate only in certain layers. This means that, for example, the\nkernels of layer 3 take input from all kernel maps in layer 2. However, kernels in layer 4 take input\nonly from those kernel maps in layer 3 which reside on the same GPU. Choosing the pattern of\nconnectivity is a problem for cross-validation, but this allows us to precisely tune the amount of\ncommunication until it is an acceptable fraction of the amount of computation.\nThe resultant architecture is somewhat similar to that of the \u201ccolumnar\u201d CNN employed by Cire\u00b8 san\net al. [5], except that our columns are not independent (see Figure 2). This scheme reduces our top-1\nand top-5 error rates by 1.7% and 1.2%, respectively, as compared with a net with half as many\nkernels in each convolutional layer trained on one GPU. The two-GPU net takes slightly less time\nto train than the one-GPU net2.\n2The one-GPU net actually has the same number of kernels as the two-GPU net in the \ufb01nal convolutional\nlayer. This is because most of the net\u2019s parameters are in the \ufb01rst fully-connected layer, which takes the last\nconvolutional layer as input. So to make the two nets have approximately the same number of parameters, we\ndid not halve the size of the \ufb01nal convolutional layer (nor the fully-conneced layers which follow). Therefore\nthis comparison is biased in favor of the one-GPU net, since it is bigger than \u201chalf the size\u201d of the two-GPU\nnet.\n3\n3.3 Local Response Normalization\nReLUs have the desirable property that they do not require input normalization to prevent them\nfrom saturating. If at least some training examples produce a positive input to a ReLU, learning will\nhappen in that neuron. However, we still \ufb01nd that the following local normalization scheme aids\ngeneralization. Denoting by ai\nx;ythe activity of a neuron computed by applying kernel iat position\n(x;y)and then applying the ReLU nonlinearity, the response-normalized activity bi\nx;yis given by\nthe expression\nbi\nx;y=ai\nx;y=0\n@k+\u000bmin(N\u00001;i+n=2)X\nj=max(0;i\u0000n=2)(aj\nx;y)21\nA\f\nwhere the sum runs over n\u201cadjacent\u201d kernel maps at the same spatial position, and Nis the total\nnumber of kernels in the layer. The ordering of the kernel maps is of course arbitrary and determined\nbefore training begins. This sort of response normalization implements a form of lateral inhibition\ninspired by the type found in real neurons, creating competition for big activities amongst neuron\noutputs computed using different kernels. The constants k;n;\u000b , and\fare hyper-parameters whose\nvalues are determined using a validation set; we used k= 2,n= 5,\u000b= 10\u00004, and\f= 0:75. We\napplied this normalization after applying the ReLU nonlinearity in certain layers (see Section 3.5).\nThis scheme bears some resemblance to the local contrast normalization scheme of Jarrett et al. [11],\nbut ours would be more correctly termed \u201cbrightness normalization\u201d, since we do not subtract the\nmean activity. Response normalization reduces our top-1 and top-5 error rates by 1.4% and 1.2%,\nrespectively. We also veri\ufb01ed the effectiveness of this scheme on the CIFAR-10 dataset: a four-layer\nCNN achieved a 13% test error rate without normalization and 11% with normalization3.\n3.4 Overlapping Pooling\nPooling layers in CNNs summarize the outputs of neighboring groups of neurons in the same kernel\nmap. Traditionally, the neighborhoods summarized by adjacent pooling units do not overlap (e.g.,\n[17, 11, 4]). To be more precise, a pooling layer can be thought of as consisting of a grid of pooling\nunits spaced spixels apart, each summarizing a neighborhood of size z\u0002zcentered at the location\nof the pooling unit. If we set s=z, we obtain traditional local pooling as commonly employed\nin CNNs. If we set s < z , we obtain overlapping pooling. This is what we use throughout our\nnetwork, with s= 2 andz= 3. This scheme reduces the top-1 and top-5 error rates by 0.4% and\n0.3%, respectively, as compared with the non-overlapping scheme s= 2;z= 2, which produces\noutput of equivalent dimensions. We generally observe during training that models with overlapping\npooling \ufb01nd it slightly more dif\ufb01cult to over\ufb01t.\n3.5 Overall Architecture\nNow we are ready to describe the overall architecture of our CNN. As depicted in Figure 2, the net\ncontains eight layers with weights; the \ufb01rst \ufb01ve are convolutional and the remaining three are fully-\nconnected. The output of the last fully-connected layer is fed to a 1000-way softmax which produces\na distribution over the 1000 class labels. Our network maximizes the multinomial logistic regression\nobjective, which is equivalent to maximizing the average across training cases of the log-probability\nof the correct label under the prediction distribution.\nThe kernels of the second, fourth, and \ufb01fth convolutional layers are connected only to those kernel\nmaps in the previous layer which reside on the same GPU (see Figure 2). The kernels of the third\nconvolutional layer are connected to all kernel maps in the second layer. The neurons in the fully-\nconnected layers are connected to all neurons in the previous layer. Response-normalization layers\nfollow the \ufb01rst and second convolutional layers. Max-pooling layers, of the kind described in Section\n3.4, follow both response-normalization layers as well as the \ufb01fth convolutional layer. The ReLU\nnon-linearity is applied to the output of every convolutional and fully-connected layer.\nThe \ufb01rst convolutional layer \ufb01lters the 224\u0002224\u00023input image with 96 kernels of size 11\u000211\u00023\nwith a stride of 4 pixels (this is the distance between the receptive \ufb01eld centers of neighboring\n3We cannot describe this network in detail due to space constraints, but it is speci\ufb01ed precisely by the code\nand parameter \ufb01les provided here: http://code.google.com/p/cuda-convnet/.\n4\nFigure 2: An illustration of the architecture of our CNN, explicitly showing the delineation of responsibilities\nbetween the two GPUs. One GPU runs the layer-parts at the top of the \ufb01gure while the other runs the layer-parts\nat the bottom. The GPUs communicate only at certain layers. The network\u2019s input is 150,528-dimensional, and\nthe number of neurons in the network\u2019s remaining layers is given by 253,440\u2013186,624\u201364,896\u201364,896\u201343,264\u2013\n4096\u20134096\u20131000.\nneurons in a kernel map). The second convolutional layer takes as input the (response-normalized\nand pooled) output of the \ufb01rst convolutional layer and \ufb01lters it with 256 kernels of size 5\u00025\u000248.\nThe third, fourth, and \ufb01fth convolutional layers are connected to one another without any intervening\npooling or normalization layers. The third convolutional layer has 384 kernels of size 3\u00023\u0002\n256connected to the (normalized, pooled) outputs of the second convolutional layer. The fourth\nconvolutional layer has 384 kernels of size 3\u00023\u0002192, and the \ufb01fth convolutional layer has 256\nkernels of size 3\u00023\u0002192. The fully-connected layers have 4096 neurons each.\n4 Reducing Over\ufb01tting\nOur neural network architecture has 60 million parameters. Although the 1000 classes of ILSVRC\nmake each training example impose 10 bits of constraint on the mapping from image to label, this\nturns out to be insuf\ufb01cient to learn so many parameters without considerable over\ufb01tting. Below, we\ndescribe the two primary ways in which we combat over\ufb01tting.\n4.1 Data Augmentation\nThe easiest and most common method to reduce over\ufb01tting on image data is to arti\ufb01cially enlarge\nthe dataset using label-preserving transformations (e.g., [25, 4, 5]). We employ two distinct forms\nof data augmentation, both of which allow transformed images to be produced from the original\nimages with very little computation, so the transformed images do not need to be stored on disk.\nIn our implementation, the transformed images are generated in Python code on the CPU while the\nGPU is training on the previous batch of images. So these data augmentation schemes are, in effect,\ncomputationally free.\nThe \ufb01rst form of data augmentation consists of generating image translations and horizontal re\ufb02ec-\ntions. We do this by extracting random 224\u0002224patches (and their horizontal re\ufb02ections) from the\n256\u0002256images and training our network on these extracted patches4. This increases the size of our\ntraining set by a factor of 2048, though the resulting training examples are, of course, highly inter-\ndependent. Without this scheme, our network suffers from substantial over\ufb01tting, which would have\nforced us to use much smaller networks. At test time, the network makes a prediction by extracting\n\ufb01ve224\u0002224patches (the four corner patches and the center patch) as well as their horizontal\nre\ufb02ections (hence ten patches in all), and averaging the predictions made by the network\u2019s softmax\nlayer on the ten patches.\nThe second form of data augmentation consists of altering the intensities of the RGB channels in\ntraining images. Speci\ufb01cally, we perform PCA on the set of RGB pixel values throughout the\nImageNet training set. To each training image, we add multiples of the found principal components,\n4This is the reason why the input images in Figure 2 are 224\u0002224\u00023-dimensional.\n5\nwith magnitudes proportional to the corresponding eigenvalues times a random variable drawn from\na Gaussian with mean zero and standard deviation 0.1. Therefore to each RGB image pixel Ixy=\n[IR\nxy;IG\nxy;IB\nxy]Twe add the following quantity:\n[p1;p2;p3][\u000b1\u00151;\u000b2\u00152;\u000b3\u00153]T\nwhere piand\u0015iareith eigenvector and eigenvalue of the 3\u00023covariance matrix of RGB pixel\nvalues, respectively, and \u000biis the aforementioned random variable. Each \u000biis drawn only once\nfor all the pixels of a particular training image until that image is used for training again, at which\npoint it is re-drawn. This scheme approximately captures an important property of natural images,\nnamely, that object identity is invariant to changes in the intensity and color of the illumination. This\nscheme reduces the top-1 error rate by over 1%.\n4.2 Dropout\nCombining the predictions of many different models is a very successful way to reduce test errors\n[1, 3], but it appears to be too expensive for big neural networks that already take several days\nto train. There is, however, a very ef\ufb01cient version of model combination that only costs about a\nfactor of two during training. The recently-introduced technique, called \u201cdropout\u201d [10], consists\nof setting to zero the output of each hidden neuron with probability 0.5. The neurons which are\n\u201cdropped out\u201d in this way do not contribute to the forward pass and do not participate in back-\npropagation. So every time an input is presented, the neural network samples a different architecture,\nbut all these architectures share weights. This technique reduces complex co-adaptations of neurons,\nsince a neuron cannot rely on the presence of particular other neurons. It is, therefore, forced to\nlearn more robust features that are useful in conjunction with many different random subsets of the\nother neurons. At test time, we use all the neurons but multiply their outputs by 0.5, which is a\nreasonable approximation to taking the geometric mean of the predictive distributions produced by\nthe exponentially-many dropout networks.\nWe use dropout in the \ufb01rst two fully-connected layers of Figure 2. Without dropout, our network ex-\nhibits substantial over\ufb01tting. Dropout roughly doubles the number of iterations required to converge.\nFigure 3: 96 convolutional kernels of size\n11\u000211\u00023learned by the \ufb01rst convolutional\nlayer on the 224\u0002224\u00023input images. The\ntop 48 kernels were learned on GPU 1 while\nthe bottom 48 kernels were learned on GPU\n2. See Section 6.1 for details.5 Details of learning\nWe trained our models using stochastic gradient descent\nwith a batch size of 128 examples, momentum of 0.9, and\nweight decay of 0.0005. We found that this small amount\nof weight decay was important for the model to learn. In\nother words, weight decay here is not merely a regularizer:\nit reduces the model\u2019s training error. The update rule for\nweightwwas\nvi+1 := 0:9\u0001vi\u00000:0005\u0001\u000f\u0001wi\u0000\u000f\u0001\u001c@L\n@w\f\f\nwi\u001d\nDi\nwi+1 :=wi+vi+1\nwhereiis the iteration index, vis the momentum variable, \u000fis the learning rate, andD\n@L\n@w\f\f\nwiE\nDiis\nthe average over the ith batchDiof the derivative of the objective with respect to w, evaluated at\nwi.\nWe initialized the weights in each layer from a zero-mean Gaussian distribution with standard de-\nviation 0.01. We initialized the neuron biases in the second, fourth, and \ufb01fth convolutional layers,\nas well as in the fully-connected hidden layers, with the constant 1. This initialization accelerates\nthe early stages of learning by providing the ReLUs with positive inputs. We initialized the neuron\nbiases in the remaining layers with the constant 0.\nWe used an equal learning rate for all layers, which we adjusted manually throughout training.\nThe heuristic which we followed was to divide the learning rate by 10 when the validation error\nrate stopped improving with the current learning rate. The learning rate was initialized at 0.01 and\n6\nreduced three times prior to termination. We trained the network for roughly 90 cycles through the\ntraining set of 1.2 million images, which took \ufb01ve to six days on two NVIDIA GTX 580 3GB GPUs.\n6 Results\nOur results on ILSVRC-2010 are summarized in Table 1. Our network achieves top-1 and top-5\ntest set error rates of 37.5% and17.0%5. The best performance achieved during the ILSVRC-\n2010 competition was 47.1% and 28.2% with an approach that averages the predictions produced\nfrom six sparse-coding models trained on different features [2], and since then the best pub-\nlished results are 45.7% and 25.7% with an approach that averages the predictions of two classi-\n\ufb01ers trained on Fisher Vectors (FVs) computed from two types of densely-sampled features [24].\nModel Top-1 Top-5\nSparse coding [2] 47.1% 28.2%\nSIFT + FVs [24] 45.7% 25.7%\nCNN 37.5% 17.0%\nTable 1: Comparison of results on ILSVRC-\n2010 test set. In italics are best results\nachieved by others.We also entered our model in the ILSVRC-2012 com-\npetition and report our results in Table 2. Since the\nILSVRC-2012 test set labels are not publicly available,\nwe cannot report test error rates for all the models that\nwe tried. In the remainder of this paragraph, we use\nvalidation and test error rates interchangeably because\nin our experience they do not differ by more than 0.1%\n(see Table 2). The CNN described in this paper achieves\na top-5 error rate of 18.2%. Averaging the predictions\nof \ufb01ve similar CNNs gives an error rate of 16.4%. Training one CNN, with an extra sixth con-\nvolutional layer over the last pooling layer, to classify the entire ImageNet Fall 2011 release\n(15M images, 22K categories), and then \u201c\ufb01ne-tuning\u201d it on ILSVRC-2012 gives an error rate of\n16.6%. Averaging the predictions of two CNNs that were pre-trained on the entire Fall 2011 re-\nlease with the aforementioned \ufb01ve CNNs gives an error rate of 15.3% . The second-best con-\ntest entry achieved an error rate of 26.2% with an approach that averages the predictions of sev-\neral classi\ufb01ers trained on FVs computed from different types of densely-sampled features [7].\nModel Top-1 (val) Top-5 (val) Top-5 (test)\nSIFT + FVs [7] \u2014 \u2014 26.2%\n1 CNN 40.7% 18.2% \u2014\n5 CNNs 38.1% 16.4% 16.4%\n1 CNN* 39.0% 16.6% \u2014\n7 CNNs* 36.7% 15.4% 15.3%\nTable 2: Comparison of error rates on ILSVRC-2012 validation and\ntest sets. In italics are best results achieved by others. Models with an\nasterisk* were \u201cpre-trained\u201d to classify the entire ImageNet 2011 Fall\nrelease. See Section 6 for details.Finally, we also report our error\nrates on the Fall 2009 version of\nImageNet with 10,184 categories\nand 8.9 million images. On this\ndataset we follow the convention\nin the literature of using half of\nthe images for training and half\nfor testing. Since there is no es-\ntablished test set, our split neces-\nsarily differs from the splits used\nby previous authors, but this does\nnot affect the results appreciably.\nOur top-1 and top-5 error rates\non this dataset are 67.4% and\n40.9% , attained by the net described above but with an additional, sixth convolutional layer over the\nlast pooling layer. The best published results on this dataset are 78.1% and 60.9% [19].\n6.1 Qualitative Evaluations\nFigure 3 shows the convolutional kernels learned by the network\u2019s two data-connected layers. The\nnetwork has learned a variety of frequency- and orientation-selective kernels, as well as various col-\nored blobs. Notice the specialization exhibited by the two GPUs, a result of the restricted connec-\ntivity described in Section 3.5. The kernels on GPU 1 are largely color-agnostic, while the kernels\non on GPU 2 are largely color-speci\ufb01c. This kind of specialization occurs during every run and is\nindependent of any particular random weight initialization (modulo a renumbering of the GPUs).\n5The error rates without averaging predictions over ten patches as described in Section 4.1 are 39.0% and\n18.3%.\n7\nFigure 4: (Left) Eight ILSVRC-2010 test images and the \ufb01ve labels considered most probable by our model.\nThe correct label is written under each image, and the probability assigned to the correct label is also shown\nwith a red bar (if it happens to be in the top 5). (Right) Five ILSVRC-2010 test images in the \ufb01rst column. The\nremaining columns show the six training images that produce feature vectors in the last hidden layer with the\nsmallest Euclidean distance from the feature vector for the test image.\nIn the left panel of Figure 4 we qualitatively assess what the network has learned by computing its\ntop-5 predictions on eight test images. Notice that even off-center objects, such as the mite in the\ntop-left, can be recognized by the net. Most of the top-5 labels appear reasonable. For example,\nonly other types of cat are considered plausible labels for the leopard. In some cases (grille, cherry)\nthere is genuine ambiguity about the intended focus of the photograph.\nAnother way to probe the network\u2019s visual knowledge is to consider the feature activations induced\nby an image at the last, 4096-dimensional hidden layer. If two images produce feature activation\nvectors with a small Euclidean separation, we can say that the higher levels of the neural network\nconsider them to be similar. Figure 4 shows \ufb01ve images from the test set and the six images from\nthe training set that are most similar to each of them according to this measure. Notice that at the\npixel level, the retrieved training images are generally not close in L2 to the query images in the \ufb01rst\ncolumn. For example, the retrieved dogs and elephants appear in a variety of poses. We present the\nresults for many more test images in the supplementary material.\nComputing similarity by using Euclidean distance between two 4096-dimensional, real-valued vec-\ntors is inef\ufb01cient, but it could be made ef\ufb01cient by training an auto-encoder to compress these vectors\nto short binary codes. This should produce a much better image retrieval method than applying auto-\nencoders to the raw pixels [14], which does not make use of image labels and hence has a tendency\nto retrieve images with similar patterns of edges, whether or not they are semantically similar.\n7 Discussion\nOur results show that a large, deep convolutional neural network is capable of achieving record-\nbreaking results on a highly challenging dataset using purely supervised learning. It is notable\nthat our network\u2019s performance degrades if a single convolutional layer is removed. For example,\nremoving any of the middle layers results in a loss of about 2% for the top-1 performance of the\nnetwork. So the depth really is important for achieving our results.\nTo simplify our experiments, we did not use any unsupervised pre-training even though we expect\nthat it will help, especially if we obtain enough computational power to signi\ufb01cantly increase the\nsize of the network without obtaining a corresponding increase in the amount of labeled data. Thus\nfar, our results have improved as we have made our network larger and trained it longer but we still\nhave many orders of magnitude to go in order to match the infero-temporal pathway of the human\nvisual system. Ultimately we would like to use very large and deep convolutional nets on video\nsequences where the temporal structure provides very helpful information that is missing or far less\nobvious in static images.\n8\nReferences\n[1] R.M. Bell and Y . Koren. Lessons from the net\ufb02ix prize challenge. ACM SIGKDD Explorations Newsletter ,\n9(2):75\u201379, 2007.\n[2] A. Berg, J. Deng, and L. Fei-Fei. Large scale visual recognition challenge 2010. www.image-\nnet.org/challenges. 2010.\n[3] L. Breiman. Random forests. Machine learning , 45(1):5\u201332, 2001.\n[4] D. Cire\u00b8 san, U. Meier, and J. Schmidhuber. Multi-column deep neural networks for image classi\ufb01cation.\nArxiv preprint arXiv:1202.2745 , 2012.\n[5] D.C. Cire\u00b8 san, U. Meier, J. Masci, L.M. Gambardella, and J. Schmidhuber. High-performance neural\nnetworks for visual object classi\ufb01cation. Arxiv preprint arXiv:1102.0183 , 2011.\n[6] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei. ImageNet: A Large-Scale Hierarchical\nImage Database. In CVPR09 , 2009.\n[7] J. Deng, A. Berg, S. Satheesh, H. Su, A. Khosla, and L. Fei-Fei. ILSVRC-2012 , 2012. URL\nhttp://www.image-net.org/challenges/LSVRC/2012/ .\n[8] L. Fei-Fei, R. Fergus, and P. Perona. Learning generative visual models from few training examples: An\nincremental bayesian approach tested on 101 object categories. Computer Vision and Image Understand-\ning, 106(1):59\u201370, 2007.\n[9] G. Grif\ufb01n, A. Holub, and P. Perona. Caltech-256 object category dataset. Technical Report 7694, Cali-\nfornia Institute of Technology, 2007. URL http://authors.library.caltech.edu/7694 .\n[10] G.E. Hinton, N. Srivastava, A. Krizhevsky, I. Sutskever, and R.R. Salakhutdinov. Improving neural net-\nworks by preventing co-adaptation of feature detectors. arXiv preprint arXiv:1207.0580 , 2012.\n[11] K. Jarrett, K. Kavukcuoglu, M. A. Ranzato, and Y . LeCun. What is the best multi-stage architecture for\nobject recognition? In International Conference on Computer Vision , pages 2146\u20132153. IEEE, 2009.\n[12] A. Krizhevsky. Learning multiple layers of features from tiny images. Master\u2019s thesis, Department of\nComputer Science, University of Toronto, 2009.\n[13] A. Krizhevsky. Convolutional deep belief networks on cifar-10. Unpublished manuscript , 2010.\n[14] A. Krizhevsky and G.E. Hinton. Using very deep autoencoders for content-based image retrieval. In\nESANN , 2011.\n[15] Y . Le Cun, B. Boser, J.S. Denker, D. Henderson, R.E. Howard, W. Hubbard, L.D. Jackel, et al. Hand-\nwritten digit recognition with a back-propagation network. In Advances in neural information processing\nsystems , 1990.\n[16] Y . LeCun, F.J. Huang, and L. Bottou. Learning methods for generic object recognition with invariance to\npose and lighting. In Computer Vision and Pattern Recognition, 2004. CVPR 2004. Proceedings of the\n2004 IEEE Computer Society Conference on , volume 2, pages II\u201397. IEEE, 2004.\n[17] Y . LeCun, K. Kavukcuoglu, and C. Farabet. Convolutional networks and applications in vision. In\nCircuits and Systems (ISCAS), Proceedings of 2010 IEEE International Symposium on , pages 253\u2013256.\nIEEE, 2010.\n[18] H. Lee, R. Grosse, R. Ranganath, and A.Y . Ng. Convolutional deep belief networks for scalable unsuper-\nvised learning of hierarchical representations. In Proceedings of the 26th Annual International Conference\non Machine Learning , pages 609\u2013616. ACM, 2009.\n[19] T. Mensink, J. Verbeek, F. Perronnin, and G. Csurka. Metric Learning for Large Scale Image Classi\ufb01-\ncation: Generalizing to New Classes at Near-Zero Cost. In ECCV - European Conference on Computer\nVision , Florence, Italy, October 2012.\n[20] V . Nair and G. E. Hinton. Recti\ufb01ed linear units improve restricted boltzmann machines. In Proc. 27th\nInternational Conference on Machine Learning , 2010.\n[21] N. Pinto, D.D. Cox, and J.J. DiCarlo. Why is real-world visual object recognition hard? PLoS computa-\ntional biology , 4(1):e27, 2008.\n[22] N. Pinto, D. Doukhan, J.J. DiCarlo, and D.D. Cox. A high-throughput screening approach to discovering\ngood forms of biologically inspired visual representation. PLoS computational biology , 5(11):e1000579,\n2009.\n[23] B.C. Russell, A. Torralba, K.P. Murphy, and W.T. Freeman. Labelme: a database and web-based tool for\nimage annotation. International journal of computer vision , 77(1):157\u2013173, 2008.\n[24] J. S\u00e1nchez and F. Perronnin. High-dimensional signature compression for large-scale image classi\ufb01cation.\nInComputer Vision and Pattern Recognition (CVPR), 2011 IEEE Conference on , pages 1665\u20131672. IEEE,\n2011.\n[25] P.Y . Simard, D. Steinkraus, and J.C. Platt. Best practices for convolutional neural networks applied to\nvisual document analysis. In Proceedings of the Seventh International Conference on Document Analysis\nand Recognition , volume 2, pages 958\u2013962, 2003.\n[26] S.C. Turaga, J.F. Murray, V . Jain, F. Roth, M. Helmstaedter, K. Briggman, W. Denk, and H.S. Seung. Con-\nvolutional networks can learn to generate af\ufb01nity graphs for image segmentation. Neural Computation ,\n22(2):511\u2013538, 2010.\n9", "doc_id": "b152b76c-e327-44f6-8205-029df6326941", "embedding": null, "extra_info": null, "__type__": "Document"}}}}